{"version":3,"sources":["webpack:///./src/templates/Tag.tsx"],"names":["TagTemplate","data","location","lang","pageContext","allMarkdownRemark","posts","edges","pageInfo","pathname","split","tagPath","tagSlug","path","title","startCase","map","p","node","defaultUrl","pageQuery"],"mappings":"0OA2CeA,UAnBK,SAAC,GAAqD,IAAnDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,SAAyBC,EAAoB,EAAnCC,YAAeD,KAAoB,EAGpEF,EADFI,kBAA4BC,EAF0C,EAEjDC,MAAcC,EAFmC,EAEnCA,SAFmC,EAI3CN,EAASO,SAASC,MAAM,KAA5CC,EAJ+D,KAItDC,EAJsD,KAKlEC,EAAO,IAAIF,EAAP,IAAkBC,EAE5B,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CAAKE,MAAOC,IAAUH,GAAUT,KAAMA,IACtC,YAAC,IAAD,CACEG,MAAOA,EAAMU,KAAI,SAACC,GAAD,OAAuBA,EAAEC,QAC1CV,SAAQ,iBAAOA,EAAP,CAAiBW,WAAYN,EAAMV,SAC3CD,SAAUA,MAQX,IAAMkB,EAAY","file":"component---src-templates-tag-tsx-8342e2a1355d960ae9b2.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { graphql } from 'gatsby';\nimport startCase from 'lodash/startCase';\nimport { Post } from 'models/post';\nimport PostsLayout from 'components/Layout/Posts';\nimport SEO from 'components/SEO';\nimport { Fragment } from 'react';\n\ninterface Props {\n  data: {\n    allMarkdownRemark: any;\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n  location: Location;\n  pageContext: {\n    lang: string;\n  };\n}\n\nconst TagTemplate = ({ data, location, pageContext: { lang } }: Props) => {\n  const {\n    allMarkdownRemark: { edges: posts, pageInfo },\n  } = data;\n  const [, tagPath, tagSlug] = location.pathname.split('/');\n  const path = `/${tagPath}/${tagSlug}`;\n\n  return (\n    <Fragment>\n      <SEO title={startCase(tagSlug)} lang={lang} />\n      <PostsLayout\n        posts={posts.map((p: { node: Post }) => p.node)}\n        pageInfo={{ ...pageInfo, defaultUrl: path, lang }}\n        location={location}\n      />\n    </Fragment>\n  );\n};\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query TagQuery($skip: Int!, $limit: Int!, $tag: String!, $lang: String!) {\n    allMarkdownRemark(\n      skip: $skip\n      limit: $limit\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } }, fields: { lang: { eq: $lang } } }\n    ) {\n      edges {\n        node {\n          ...PostListQuery\n        }\n      }\n      pageInfo {\n        currentPage\n        pageCount\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}