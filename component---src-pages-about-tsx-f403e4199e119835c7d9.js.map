{"version":3,"sources":["webpack:///./src/components/Cards/Widgets/RecentPosts.tsx","webpack:///./src/hooks/useAboutData.ts","webpack:///./src/hooks/useRelatedProjectPosts.ts","webpack:///./src/containers/AboutPage/SectionTitle.tsx","webpack:///./node_modules/react-feather/dist/icons/play.js","webpack:///./src/containers/AboutPage/ProjectIntroduction.tsx","webpack:///./src/containers/AboutPage/index.tsx","webpack:///./src/pages/about.tsx","webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/components/Cards/Widgets/index.tsx","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/components/Items/SimplePostItem.tsx"],"names":["useStyles","makeStyles","wrapper","margin","padding","RecentPostsCard","onClick","styles","posts","useAllPosts","recent","useMemo","splice","handleRecentPostClick","useCallback","path","title","className","map","post","index","key","fields","thumbnail","frontmatter","childImageSharp","fixed","src","date","categories","useAboutData","profile","useProfileInfo","relatedPosts","images","fontWeight","divider","spacing","SectionTitle","description","Box","marginTop","Typography","variant","component","gutterBottom","Divider","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Play","_ref","ref","_ref$color","color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","string","oneOfType","number","displayName","shape","shadows","palette","borderRadius","marginBottom","boxShadow","buttonWrapper","button","backgroundColor","grey","relatedPostsWrapper","ProjectIntroduction","children","githubLink","demoLink","logger","handleGithubClick","click","product","handleDemoClick","handlePostClick","fluid","Grid","container","justify","item","Button","href","Paper","SimplePostItem","generateLogger","handleExternalLinkClick","fieldValueFilter","value","node","fieldValue","introButtonWrapper","alert","useButtonStyles","github","linkedIn","theme","main","common","white","opacity","email","AboutPage","buttonStyles","siteMetadata","site","group","allMarkdownRemark","data","bookPosts","filter","nodes","solarSystemPosts","simpleAnnPosts","simpleWaveformPosts","useEffect","view","Layout","right","RecentPosts","rightSticky","SEO","Card","CardContent","maxWidth","overflow","avatar","role","aria-label","xs","lg","social","startIcon","linkedin","author","vueWithCoffee","solarSystem","simpleAnn","simpleWaveform","zarbis","props","classes","_props$raised","raised","other","root","elevation","name","_props$color","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","startIconProp","_props$type","type","_props$variant","concat","colorInherit","focusRipple","focusVisible","label","typography","boxSizing","minWidth","text","primary","transition","transitions","create","duration","textDecoration","action","hoverOpacity","display","alignItems","justifyContent","textPrimary","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","content","withStyles","flex","alignSelf","WidgetCard","paddingBottom","link","category","join","to","alt"],"mappings":"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","file":"component---src-pages-about-tsx-f403e4199e119835c7d9.js","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport WidgetCard from 'components/Cards/Widgets';\nimport { makeStyles } from '@material-ui/core';\nimport { useAllPosts } from 'hooks/useAllPosts';\n\nconst MAX_POST_COUNT = 5;\nconst useStyles = makeStyles({\n  wrapper: {\n    margin: 0,\n    padding: 0,\n  },\n});\n\ninterface Props {\n  onClick?: (path: string) => void;\n}\nconst RecentPostsCard = ({ onClick }: Props) => {\n  const styles = useStyles();\n  const posts = useAllPosts();\n\n  const recent = useMemo(() => {\n    return posts.splice(0, MAX_POST_COUNT);\n  }, [posts]);\n\n  const handleRecentPostClick = useCallback(\n    (path: string) => {\n      onClick?.(path);\n    },\n    [onClick]\n  );\n\n  return (\n    <WidgetCard title=\"최근 글\">\n      <ul className={styles.wrapper}>\n        {recent.map((post, index) => (\n          <SimplePostItem\n            key={post.fields.path ?? index}\n            thumbnail={post.frontmatter.thumbnail?.childImageSharp?.fixed?.src ?? ''}\n            title={post.frontmatter.title ?? ''}\n            date={post.frontmatter.date}\n            path={post.fields.path ?? '/'}\n            categories={post.frontmatter.categories}\n            onClick={() => handleRecentPostClick(post.fields.path)}\n          />\n        ))}\n      </ul>\n    </WidgetCard>\n  );\n};\n\nexport default RecentPostsCard;\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport { useProfileInfo } from './useProfileInfo';\nimport { useRelatedProjectPosts } from './useRelatedProjectPosts';\n\ntype AboutImagesKey = 'simpleAnn' | 'simpleWaveform' | 'solarSystem' | 'vueWithCoffee' | 'zarbis';\n\ntype AboutImagesQueryResult = {\n  [key in AboutImagesKey]: {\n    childImageSharp: {\n      fluid: FluidObject;\n    };\n  };\n};\n\nexport const useAboutData = () => {\n  const profile = useProfileInfo();\n  const relatedPosts = useRelatedProjectPosts();\n  const images = useStaticQuery<AboutImagesQueryResult>(graphql`\n    query AboutImagesQuery {\n      simpleAnn: file(absolutePath: { regex: \"/simple-ann.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      simpleWaveform: file(absolutePath: { regex: \"/simple-waveform.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      solarSystem: file(absolutePath: { regex: \"/solar-system.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      vueWithCoffee: file(absolutePath: { regex: \"/vue-with-coffee/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      zarbis: file(absolutePath: { regex: \"/zarbis/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return {\n    ...profile,\n    ...relatedPosts,\n    ...images,\n  };\n};\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { GroupItem, Post } from 'models/post';\n\ninterface QueryResult {\n  allMarkdownRemark: {\n    group: Array<GroupItem<Post>>;\n  };\n}\nexport const useRelatedProjectPosts = () => {\n  const data: QueryResult = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: frontmatter___relatedProject) {\n          fieldValue\n          totalCount\n          nodes {\n            fields {\n              slug\n              path\n              lang\n            }\n            frontmatter {\n              title\n              date\n              categories\n              thumbnail {\n                childImageSharp {\n                  fixed(width: 320, height: 320, quality: 100, cropFocus: CENTER) {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data;\n};\n","import React, { ReactNode } from 'react';\nimport { Box, Typography, Divider, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles<Theme>(({ spacing }) => ({\n  title: {\n    fontWeight: 'bold',\n  },\n  divider: {\n    margin: `${spacing(2)}px 0`,\n  },\n}));\n\ninterface Props {\n  title: string;\n  description?: ReactNode;\n}\nconst SectionTitle = ({ title, description }: Props) => {\n  const styles = useStyles();\n\n  return (\n    <Box marginTop=\"2rem\">\n      <Typography variant=\"h5\" component=\"h2\" className={styles.title} gutterBottom>\n        {title}\n      </Typography>\n      {description && <Typography variant=\"body2\">{description}</Typography>}\n      <Divider className={styles.divider} />\n    </Box>\n  );\n};\n\nexport default SectionTitle;\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Play = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"5 3 19 12 5 21 5 3\"\n  }));\n});\nPlay.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlay.displayName = 'Play';\nexport default Play;","import React, { ReactNode, useCallback } from 'react';\nimport { Box, Typography, Button, Grid, makeStyles, Paper, Divider, Theme } from '@material-ui/core';\nimport * as Icon from 'react-feather';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport { Post } from 'models/post';\nimport Image, { FluidObject } from 'gatsby-image';\nimport { Logger } from 'utils/loggers';\n\nconst useStyles = makeStyles<Theme>(({ shape, shadows, palette, spacing }) => ({\n  thumbnail: {\n    borderRadius: shape.borderRadius,\n    marginBottom: spacing(2),\n    boxShadow: shadows[3],\n  },\n  buttonWrapper: {\n    marginBottom: spacing(4),\n  },\n  button: {\n    backgroundColor: palette.grey['900'],\n    color: palette.grey['100'],\n    width: '100%',\n    '&:hover': {\n      backgroundColor: palette.grey['700'],\n      color: palette.grey['100'],\n    },\n  },\n  relatedPostsWrapper: {\n    marginTop: spacing(2),\n  },\n  relatedPosts: {\n    padding: spacing(2),\n  },\n  divider: {\n    margin: `${spacing(4)}px 0`,\n  },\n}));\n\ninterface Props {\n  title: string;\n  children: ReactNode;\n  thumbnail: FluidObject;\n  githubLink?: string;\n  demoLink?: string;\n  posts?: Post[];\n  divider?: boolean;\n  logger?: Logger;\n}\nconst ProjectIntroduction = ({\n  title,\n  children,\n  thumbnail,\n  githubLink,\n  demoLink,\n  posts = [],\n  divider = true,\n  logger,\n}: Props) => {\n  const styles = useStyles();\n\n  const handleGithubClick = useCallback(() => {\n    logger?.click(`click_github_link`, {\n      product: title,\n    });\n  }, [logger, title]);\n  const handleDemoClick = useCallback(() => {\n    logger?.click(`click_demo_link`, {\n      product: title,\n    });\n  }, [logger, title]);\n  const handlePostClick = useCallback(\n    (path: string) => {\n      logger?.click('click_related_posting', {\n        path,\n      });\n    },\n    [logger]\n  );\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n        # {title}\n      </Typography>\n      <Image fluid={thumbnail} className={styles.thumbnail} />\n      <Grid spacing={1} container justify=\"center\" className={styles.buttonWrapper}>\n        {githubLink && (\n          <Grid item>\n            <Button href={githubLink} className={styles.button} onClick={handleGithubClick} target=\"_blank\">\n              <Icon.GitHub />\n            </Button>\n          </Grid>\n        )}\n        {demoLink && (\n          <Grid item>\n            <Button href={demoLink} className={styles.button} onClick={handleDemoClick} target=\"_blank\">\n              <Icon.Play />\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n      {children}\n      <Box className={styles.relatedPostsWrapper}>\n        <Paper className={styles.relatedPosts} variant=\"outlined\">\n          <Typography variant=\"h6\" component=\"h4\" gutterBottom>\n            관련 포스팅\n          </Typography>\n          {posts.map(({ frontmatter, fields }, index) => (\n            <SimplePostItem\n              key={fields.path ?? index}\n              thumbnail={frontmatter.thumbnail.childImageSharp?.fixed?.src ?? ''}\n              title={frontmatter.title ?? ''}\n              date={frontmatter.date}\n              path={fields.path ?? '/'}\n              categories={frontmatter.categories}\n              onClick={handlePostClick}\n            />\n          ))}\n        </Paper>\n      </Box>\n      {divider && <Divider className={styles.divider} />}\n    </Box>\n  );\n};\n\nexport default ProjectIntroduction;\n","import React, { useEffect } from 'react';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Image from 'gatsby-image';\nimport { useAboutData } from 'hooks/useAboutData';\nimport { Box, Typography, Grid, Button, Card, CardContent, makeStyles, Theme } from '@material-ui/core';\nimport * as Icon from 'react-feather';\nimport RecentPostsCard from 'components/Cards/Widgets/RecentPosts';\nimport SectionTitle from './SectionTitle';\nimport ProjectIntroduction from './ProjectIntroduction';\nimport theme from 'utils/theme';\nimport { Post, GroupItem } from 'models/post';\nimport { generateLogger } from 'utils/loggers';\n\nconst logger = generateLogger('about_page');\nconst handleRecentPostClick = (path: string) => {\n  logger.click('click_recent_posting', { path });\n};\nconst handleExternalLinkClick = (target: string) => () => {\n  logger.click('click_external_link', { target });\n};\n\nconst fieldValueFilter = (value: string) => (node: GroupItem<Post>) => node.fieldValue === value;\nconst useStyles = makeStyles<Theme>(({ spacing }) => ({\n  introButtonWrapper: {\n    margin: `${spacing(4)}px 0`,\n  },\n  alert: {\n    marginBottom: spacing(2),\n  },\n}));\nconst useButtonStyles = makeStyles<Theme>(({ palette: { grey } }) => ({\n  github: {\n    backgroundColor: grey['900'],\n    color: grey['100'],\n    width: '100%',\n    '&:hover': {\n      backgroundColor: grey['700'],\n      color: grey['100'],\n    },\n  },\n  linkedIn: {\n    backgroundColor: theme.palette.linkedIn.main,\n    color: theme.palette.common.white,\n    width: '100%',\n    '&:hover': {\n      backgroundColor: theme.palette.linkedIn.main,\n      opacity: 0.8,\n    },\n  },\n  email: {\n    backgroundColor: grey['300'],\n    color: grey['900'],\n    width: '100%',\n  },\n}));\n\nconst AboutPage = () => {\n  const styles = useStyles();\n  const buttonStyles = useButtonStyles();\n  const {\n    site: { siteMetadata },\n    allMarkdownRemark: { group },\n    ...data\n  } = useAboutData();\n\n  const { nodes: bookPosts } = group.filter(fieldValueFilter('vuejsBook'))[0];\n  const { nodes: solarSystemPosts } = group.filter(fieldValueFilter('solarSystem'))[0];\n  const { nodes: simpleAnnPosts } = group.filter(fieldValueFilter('simpleAnn'))[0];\n  const { nodes: simpleWaveformPosts } = group.filter(fieldValueFilter('simpleWaveform'))[0];\n\n  useEffect(() => {\n    logger.view();\n  }, []);\n\n  return (\n    <Layout right={<RecentPostsCard onClick={handleRecentPostClick} />} profile={false} rightSticky={true}>\n      <SEO title=\"About Evan Moon\" />\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Box>\n            <Box maxWidth={500} margin=\"2rem auto\" borderRadius={6} overflow=\"hidden\">\n              <Image fluid={data.avatar.childImageSharp.fluid} />\n            </Box>\n\n            <Typography>\n              안녕하세요. 물리와 우주 덕후 프로그래머 문동욱입니다.{' '}\n              <span role=\"img\" aria-label=\"hi-emoji\">\n                🖐\n              </span>\n              <br />\n              <br />\n              현재 서울에 거주하며 대한민국의 IT 회사를 돌아다니면서 프론트엔드 개발자로 일하고 있습니다.\n              <br />\n              <br />\n              메인 포지션은 웹 프론트엔드이기는 하지만, 딱히 지식을 가려먹는 타입은 아니라서 폭 넓고 보편적인 지식을\n              쌓으려고 하고 있습니다. 딱히 프로그래밍과 관련된 것이 아니라도 필요하다 싶으면 그냥 공부하는 편입니다.\n              <br />\n              <br />\n              글쓰기를 좋아하기 때문에 이 블로그를 운영하고 있긴 한데, 딱히 기술적인 것이 아니라도 그냥 쓰고 싶은 주제가\n              있으면 아무거나 쓰기 때문에 기술 블로그와 에세이 블로그의 혼종 느낌으로 운영하고 있습니다.\n            </Typography>\n            <Grid container spacing={1} className={styles.introButtonWrapper}>\n              <Grid item xs={12} lg={4}>\n                <Button\n                  href={siteMetadata.social.github}\n                  className={buttonStyles.github}\n                  size=\"large\"\n                  startIcon={<Icon.GitHub />}\n                  onClick={handleExternalLinkClick('github')}\n                  target=\"_blank\"\n                >\n                  Github\n                </Button>\n              </Grid>\n              <Grid item xs={12} lg={4}>\n                <Button\n                  href={siteMetadata.social.linkedin}\n                  className={buttonStyles.linkedIn}\n                  size=\"large\"\n                  startIcon={<Icon.Linkedin />}\n                  onClick={handleExternalLinkClick('linkedin')}\n                  target=\"_blank\"\n                >\n                  Linkedin\n                </Button>\n              </Grid>\n              <Grid item xs={12} lg={4}>\n                <Button\n                  href={`mailto:${siteMetadata.author.email}`}\n                  className={buttonStyles.email}\n                  size=\"large\"\n                  startIcon={<Icon.Mail />}\n                  onClick={handleExternalLinkClick('email')}\n                  target=\"_blank\"\n                >\n                  Email\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box component=\"section\">\n            <SectionTitle title=\"저서\" />\n            <ProjectIntroduction\n              title=\"커피 한 잔 마시며 끝내는 VueJS\"\n              thumbnail={data.vueWithCoffee.childImageSharp.fluid}\n              githubLink=\"https://github.com/CanDoVueJS\"\n              demoLink=\"http://yes24.com/Product/Goods/76639545\"\n              posts={bookPosts}\n              divider={false}\n            >\n              <Typography gutterBottom>\n                이 책에서는 VueJS에 대한 API뿐만 아니라 어떻게 활용하면 되는지에 대해 효과적으로 설명한다. 이러한 활용\n                예제는 실전 애플리케이션을 구축해나가는 과정을 통해 쉽고 효과적으로 학습한다.\n                <br />\n                <br />\n                어플리케이션은 실무와 동일하게 REST API를 제공하는 백엔드와 통신을 통해 데이터를 받아온 후\n                클라이언트에서 상태 관리를 하는 과정으로 진행되며, 이때 필요한 REST API는 Github을 통해 프로젝트를\n                클론받는 방식으로 제공하고 있다.\n                <br />\n                <br />\n                그뿐만 아니라 실전 애플리케이션을 구축해나가는 과정에서 겪을 수 있는 트러블 슈팅과 필자의 실무 경험을\n                바탕으로 하는 조언도 함께 학습한다.\n              </Typography>\n            </ProjectIntroduction>\n          </Box>\n          <Box component=\"section\">\n            <SectionTitle\n              title=\"Toy Projects\"\n              description={`필요해서 만든 김에 공유하고 싶거나, 재미 혹은 개인 만족을 위해서 만드는 프로젝트들. 딱히 완성이라고\n              할만한 프로젝트는 없으며, 기능은 시간 날 때마다 꾸준히 추가 중이다.`}\n            />\n            <ProjectIntroduction\n              title=\"Solar System TS\"\n              thumbnail={data.solarSystem.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/solarsystemts\"\n              demoLink=\"https://solar-system-ts.herokuapp.com/\"\n              posts={solarSystemPosts}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                TypeScript, Vue.js, Three.js(WebGL)을 사용해 제작한 실시간 태양계 시뮬레이터. 중력을 사용하여 구현하려고\n                했으나 천체의 질량 데이터가 미묘하게 맞지 않는건지 뭔지 궤도가 제 멋대로 돌아서 일단 보류.\n                <br />\n                <br />\n                대신 케플러 궤도 6요소와 케플러 방정식 + 레가르 다항식을 사용하여 현재 날짜에 해당 행성이 어디에 있는지\n                위치를 추적하는 방향으로 구현하였다.\n              </Typography>\n            </ProjectIntroduction>\n            <ProjectIntroduction\n              title=\"Simple ANN\"\n              thumbnail={data.simpleAnn.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/simple-ann\"\n              demoLink=\"https://simple-ann.herokuapp.com/\"\n              posts={simpleAnnPosts}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                TypeScript와 React, D3, ChartJS를 사용해 제작한 간단한 인공 신경망. 원래는 회사 세미나 발표 용도로\n                간단하게 만들었는데 생각보다 재밌어서 계속 건드는 중.\n                <br />\n                <br />\n                레이어의 개수와 노드의 개수, 학습 횟수 등을 설정하고 학습 과정에서 y값의 변화와 Loss의 변화를\n                시각화하였다. 추후 여러 개의 Activation Function을 선택할 수 있는 기능과 레이어마다 노드의 개수를 다르게\n                하는 등 네트워크 커스터마이징을 좀 더 다채롭게 할 수 있는 기능을 추가할 예정이다.\n              </Typography>\n            </ProjectIntroduction>\n            <ProjectIntroduction\n              title=\"Simple Waveform Visualizer\"\n              thumbnail={data.simpleWaveform.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/simple-waveform-visualizer\"\n              demoLink=\"https://simple-audio-waveform.herokuapp.com/\"\n              posts={simpleWaveformPosts}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                오디오 파일을 업로드해서 여러가지 오디오 이펙터를 걸어볼 수 있는 어플리케이션. 현재 개발된 이펙터는\n                Compressor, Reverb, Delay, Filter (LPF, HPF), EQ, Distortion, Tremolo 정도.\n                <br />\n                <br />\n                다음 단계는 오실레이터를 사용하여 신디사이저를 만들거나, 트랙을 나누어서 동시에 여러 오디오 소스를\n                재생하며 이펙터를 사용할 수 있도록 변경할 예정.\n              </Typography>\n            </ProjectIntroduction>\n            <ProjectIntroduction\n              title=\"Zarbis\"\n              thumbnail={data.zarbis.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/zarbis\"\n              demoLink=\"https://zarbis.herokuapp.com/\"\n              posts={simpleWaveformPosts}\n              divider={false}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                시계 + 날씨 + 미세먼지 정보 + 이쁜 사진 대시보드.\n                <br />\n                <br />\n                집에 노트북이 남길래 하나를 대시보드 전용으로 쓰려고 만든 웹 어플리케이션. 크롬 익스텐션인 `Momentum`를\n                쓰고 있었지만 비염이 심한 본인을 위해 미세먼지 농도도 함께 보고 싶었는데 얘네가 해당 기능 제공을\n                안해줘서 하나 새로 만들어서 쓰는 중.\n                <br />\n                <br />\n                배경사진은 날씨에 따라 알맞은 사진으로 변경되어 사용자가 굳이 구석에 있는 날씨 정보를 눈여겨 보지\n                않더라도 한 눈에 현재 날씨를 알아볼 수 있도록 함.\n              </Typography>\n            </ProjectIntroduction>\n          </Box>\n        </CardContent>\n      </Card>\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\nimport Page from 'containers/AboutPage';\nexport default () => <Page />;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { ReactNode } from 'react';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\ninterface Props {\n  title?: string;\n  children: ReactNode;\n}\nconst WidgetCard = ({ title = '', children }: Props) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport default WidgetCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { useMemo } from 'react';\nimport { Grid, Typography, makeStyles, Theme } from '@material-ui/core';\nimport { Link, graphql } from 'gatsby';\n\nconst useStyles = makeStyles<Theme>(({ shape, palette }) => ({\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  item: {\n    borderRadius: shape.borderRadius,\n    transition: 'background-color 0.3s ease-in-out',\n    '&:hover': {\n      backgroundColor: palette.grey['100'],\n    },\n  },\n  thumbnail: {\n    width: 64,\n    height: 64,\n    margin: 0,\n    borderRadius: shape.borderRadius,\n  },\n}));\n\ninterface Props {\n  thumbnail: string;\n  title: string;\n  path: string;\n  date?: string;\n  categories?: string[];\n  onClick?: (path: string) => void;\n}\nconst SimplePostItem = ({ thumbnail, title, path, date = '', categories = [], onClick }: Props) => {\n  const styles = useStyles();\n  const category = useMemo(() => {\n    if (categories != null) {\n      return categories.join('/');\n    } else {\n      return '';\n    }\n  }, [categories]);\n  return (\n    <Link to={path} className={styles.link}>\n      <Grid container spacing={2} onClick={() => onClick?.(path)} className={styles.item}>\n        <Grid item xs=\"auto\">\n          <img src={thumbnail} alt={title} title={title} className={styles.thumbnail} />\n        </Grid>\n        <Grid item xs={true}>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"caption\">\n            {date}\n          </Typography>\n          <Typography variant=\"body2\">{title}</Typography>\n          <Typography color=\"textSecondary\" variant=\"caption\">\n            {category}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Link>\n  );\n};\n\nexport default SimplePostItem;\n\nexport const query = graphql`\n  fragment SimplePostItemQuery on MarkdownRemark {\n    fields {\n      path\n      lang\n    }\n    frontmatter {\n      title\n      categories\n      date(formatString: \"YYYY-MM-DD\")\n      thumbnail {\n        childImageSharp {\n          fixed(width: 320, height: 320, quality: 100, cropFocus: CENTER) {\n            src\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}