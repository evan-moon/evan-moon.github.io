{"version":3,"sources":["webpack:///./src/components/Cards/Widgets/RecentPosts.tsx","webpack:///./src/containers/CategoriesPage/index.tsx","webpack:///./src/pages/categories.tsx","webpack:///./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack:///./src/components/Cards/Widgets/Categories.tsx","webpack:///./src/hooks/useAllCategories.ts","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/components/Cards/Widgets/index.tsx"],"names":["useStyles","makeStyles","wrapper","margin","padding","RecentPostsCard","onClick","styles","posts","useAllPosts","recent","useMemo","splice","handleRecentPostClick","useCallback","path","title","className","map","post","index","key","fields","thumbnail","frontmatter","childImageSharp","fixed","src","date","categories","logger","generateLogger","handleCategoryClick","categoryName","click","CategoriesPage","useEffect","view","Layout","right","RecentPosts","SEO","Categories","onClickCategory","props","ref","classes","other","root","muiName","withStyles","position","top","transform","name","theme","link","color","textDecoration","item","listStyle","spacing","borderRadius","shape","overflow","chip","fontSize","height","backgroundColor","palette","grey","CategoriesCard","lang","allMarkdownRemark","group","filter","nodes","length","fieldValue","totalCount","useAllCategories","useRecoilState","languageAtom","getCategoryPath","usePageRouteUtils","category","List","component","dense","to","ListItem","button","ListItemText","Chip","label","size","action","avatar","_props$component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","variant","display","content","alignItems","flex","marginRight","alignSelf","marginTop","WidgetCard","children","Card","CardContent"],"mappings":"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","file":"component---src-pages-categories-tsx-2ccb56e81f7399622301.js","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport WidgetCard from 'components/Cards/Widgets';\nimport { makeStyles } from '@material-ui/core';\nimport { useAllPosts } from 'hooks/useAllPosts';\n\nconst MAX_POST_COUNT = 5;\nconst useStyles = makeStyles({\n  wrapper: {\n    margin: 0,\n    padding: 0,\n  },\n});\n\ninterface Props {\n  onClick?: (path: string) => void;\n}\nconst RecentPostsCard = ({ onClick }: Props) => {\n  const styles = useStyles();\n  const posts = useAllPosts();\n\n  const recent = useMemo(() => {\n    return posts.splice(0, MAX_POST_COUNT);\n  }, [posts]);\n\n  const handleRecentPostClick = useCallback(\n    (path: string) => {\n      onClick?.(path);\n    },\n    [onClick]\n  );\n\n  return (\n    <WidgetCard title=\"최근 글\">\n      <ul className={styles.wrapper}>\n        {recent.map((post, index) => (\n          <SimplePostItem\n            key={post.fields.path ?? index}\n            thumbnail={post.frontmatter.thumbnail?.childImageSharp?.fixed?.src ?? ''}\n            title={post.frontmatter.title ?? ''}\n            date={post.frontmatter.date}\n            path={post.fields.path ?? '/'}\n            categories={post.frontmatter.categories}\n            onClick={() => handleRecentPostClick(post.fields.path)}\n          />\n        ))}\n      </ul>\n    </WidgetCard>\n  );\n};\n\nexport default RecentPostsCard;\n","import React, { useEffect } from 'react';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport CategoriesCard from 'components/Cards/Widgets/Categories';\nimport RecentPostsCard from 'components/Cards/Widgets/RecentPosts';\nimport { generateLogger } from 'utils/loggers';\n\nconst logger = generateLogger('categories_page');\nconst handleCategoryClick = (categoryName: string) => {\n  logger.click('click_category', { categoryName });\n};\nconst handleRecentPostClick = (path: string) => {\n  logger.click('click_recent_posting', { path });\n};\n\nconst CategoriesPage = () => {\n  useEffect(() => {\n    logger.view();\n  }, []);\n\n  return (\n    <Layout right={<RecentPostsCard onClick={handleRecentPostClick} />}>\n      <SEO title=\"카테고리\" />\n      <CategoriesCard onClickCategory={handleCategoryClick} />\n    </Layout>\n  );\n};\n\nexport default CategoriesPage;\n","import React from 'react';\nimport Page from 'containers/CategoriesPage';\nexport default () => <Page />;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import React, { useCallback } from 'react';\nimport WidgetCard from 'components/Cards/Widgets';\nimport { Link } from 'gatsby';\nimport { Chip, List, ListItem, ListItemText, ListItemSecondaryAction, makeStyles, Theme } from '@material-ui/core';\nimport { useAllCategories } from 'hooks/useAllCategories';\nimport { useRecoilState } from 'recoil';\nimport { languageAtom } from 'atoms/language';\nimport { usePageRouteUtils } from 'hooks/usePageRouteUtils';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  item: {\n    listStyle: 'none',\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius / 2,\n    overflow: 'hidden',\n  },\n  chip: {\n    borderRadius: theme.shape.borderRadius,\n    fontSize: '0.6rem',\n    height: 'auto',\n    padding: '0.3rem 0',\n    backgroundColor: theme.palette.grey['200'],\n  },\n}));\n\ninterface Props {\n  onClickCategory?: (category: string) => void;\n}\nconst CategoriesCard = ({ onClickCategory }: Props) => {\n  const styles = useStyles();\n  const [lang] = useRecoilState(languageAtom);\n  const categories = useAllCategories(lang);\n  const { getCategoryPath } = usePageRouteUtils();\n\n  const handleCategoryClick = useCallback(\n    (category: string) => {\n      onClickCategory?.(category);\n    },\n    [onClickCategory]\n  );\n\n  return (\n    <WidgetCard title=\"카테고리\">\n      <List component=\"nav\" dense={true}>\n        <Link to=\"/\" className={styles.link}>\n          <ListItem button className={styles.item} onClick={() => handleCategoryClick('전체')}>\n            <ListItemText>전체</ListItemText>\n          </ListItem>\n        </Link>\n        {categories.map(({ fieldValue, totalCount }, index) => (\n          <Link key={index} to={getCategoryPath(fieldValue)} className={styles.link}>\n            <ListItem button className={styles.item} onClick={() => handleCategoryClick(fieldValue)}>\n              <ListItemText>{fieldValue}</ListItemText>\n              <ListItemSecondaryAction>\n                <Chip className={styles.chip} label={totalCount} size=\"small\" />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </WidgetCard>\n  );\n};\n\nexport default CategoriesCard;\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { SupportedLanguages } from 'models/site';\nimport { GroupItem } from 'models/post';\n\ninterface CategoryQueryResult {\n  allMarkdownRemark: {\n    group: Array<GroupItem<{ fields: { lang: SupportedLanguages } }>>;\n  };\n}\nexport const useAllCategories = (lang: SupportedLanguages = 'ko') => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery<CategoryQueryResult>(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: frontmatter___categories) {\n          fieldValue\n          totalCount\n          nodes {\n            fields {\n              lang\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  /** @TODO 현재 랭귀지에 속한 포스팅만 totalCount에 포함되도록 수정 */\n  const currentLanguegeCategories = group.filter(\n    ({ nodes }) => nodes.filter(({ fields }) => fields.lang === lang).length > 0\n  );\n\n  return currentLanguegeCategories.map(({ fieldValue, totalCount }) => ({ fieldValue, totalCount }));\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { ReactNode } from 'react';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\ninterface Props {\n  title?: string;\n  children: ReactNode;\n}\nconst WidgetCard = ({ title = '', children }: Props) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport default WidgetCard;\n"],"sourceRoot":""}