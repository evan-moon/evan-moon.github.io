{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///./src/components/Utils/PostCount.tsx","webpack:///./src/components/Utils/CategoryCount.tsx","webpack:///./src/components/Utils/TagCount.tsx","webpack:///./node_modules/react-feather/dist/icons/rss.js","webpack:///./src/components/Cards/BioCard.tsx","webpack:///./src/components/Cards/TagsCard.tsx","webpack:///./src/pages/tags.tsx"],"names":["createSvgIcon","d","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","TagCount","count","allMarkdownRemark","totalCount","group","length","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Rss","_ref$color","_ref$size","size","rest","createElement","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","propTypes","string","oneOfType","number","displayName","useStyles","makeStyles","contents","profileImage","minWidth","marginBottom","spacing","introduce","blogData","caption","h5","fontWeight","margin","emailButtonWrapper","emailIcon","marginRight","emailButton","getContrastText","Colors","Grey","externalLinkbuton","Bio","styles","data","avatar","childImageSharp","fixed","site","siteMetadata","author","social","email","Card","CardContent","imgStyle","Box","Typography","summary","Grid","container","item","xs","PostCount","CategoryCount","Button","href","github","linkedin","rss","nonDecorationText","textDecoration","chip","TagsCard","tags","handleTagClick","useCallback","url","linkEvent","title","map","tag","fieldValue","to","toKebabCase","label","onClick","TagsPage","left","right"],"mappings":"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","file":"component---src-pages-tags-tsx-420ca9dba5588dac41a7.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background[\"default\"],\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { totalCount: count },\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        totalCount\n      }\n    }\n  `);\n\n  return <>{count}</>;\n};\n\nexport default TagCount;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: frontmatter___categories) {\n          totalCount\n        }\n      }\n    }\n  `);\n  const count = group.length;\n\n  return <>{count}</>;\n};\n\nexport default TagCount;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery(graphql`\n    query TagCountQuery {\n      allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          totalCount\n        }\n      }\n    }\n  `);\n  const count = group.length;\n\n  return <>{count}</>;\n};\n\nexport default TagCount;\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Rss = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 11a9 9 0 0 1 9 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 4a16 16 0 0 1 16 16\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"5\",\n    cy: \"19\",\n    r: \"1\"\n  }));\n});\nRss.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRss.displayName = 'Rss';\nexport default Rss;","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { Card, CardContent, Box, Typography, Grid, Button, makeStyles, Theme } from '@material-ui/core';\nimport PostCount from 'components/Utils/PostCount';\nimport CategoryCount from 'components/Utils/CategoryCount';\nimport TagCount from 'components/Utils/TagCount';\nimport { Colors } from 'utils/colors';\nimport * as Icon from 'react-feather';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  contents: {\n    textAlign: 'center',\n  },\n  profileImage: {\n    minWidth: 50,\n    marginBottom: theme.spacing(2),\n  },\n  introduce: {\n    marginBottom: theme.spacing(2),\n  },\n  blogData: {\n    marginBottom: theme.spacing(2),\n    '& dt': {\n      color: theme.palette.grey['600'],\n      fontSize: theme.typography.caption.fontSize,\n      marginBottom: theme.spacing(0.1),\n    },\n    '& dd': {\n      fontSize: theme.typography.h5.fontSize,\n      fontWeight: 300,\n      margin: 0,\n    },\n  },\n  emailButtonWrapper: {\n    marginBottom: theme.spacing(2),\n  },\n  emailIcon: {\n    width: '1rem',\n    marginRight: theme.spacing(1),\n  },\n  emailButton: {\n    width: '100%',\n    color: theme.palette.getContrastText(Colors.Grey['800']),\n    backgroundColor: Colors.Grey['800'],\n    '&:hover': {\n      backgroundColor: Colors.Grey['900'],\n    },\n  },\n  externalLinkbuton: {\n    width: '100%',\n  },\n}));\n\nconst Bio = () => {\n  const styles = useStyles();\n  const data = useStaticQuery(graphql`\n    query {\n      avatar: file(absolutePath: { regex: \"/me.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 128, height: 128, cropFocus: CENTER) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            email\n          }\n          social {\n            github\n            linkedin\n          }\n        }\n      }\n    }\n  `);\n\n  const {\n    avatar: {\n      childImageSharp: { fixed: avatar },\n    },\n    site: {\n      siteMetadata: { author, social, email },\n    },\n  } = data;\n\n  return (\n    <Card>\n      <CardContent className={styles.contents}>\n        <Image\n          fixed={avatar}\n          alt={author.name}\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n          className={styles.profileImage}\n        />\n        <Box className={styles.introduce}>\n          <Typography variant=\"h6\" component=\"h6\">\n            {author.name}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"subtitle2\">\n            {author.summary}\n          </Typography>\n        </Box>\n        <Grid container>\n          <Grid item xs={4} className={styles.blogData}>\n            <dt>포스트</dt>\n            <dd>\n              <PostCount />\n            </dd>\n          </Grid>\n          <Grid item xs={4} className={styles.blogData}>\n            <dt>카테고리</dt>\n            <dd>\n              <CategoryCount />\n            </dd>\n          </Grid>\n          <Grid item xs={4} className={styles.blogData}>\n            <dt>태그</dt>\n            <dd>\n              <TagCount />\n            </dd>\n          </Grid>\n        </Grid>\n        <Box className={styles.emailButtonWrapper}>\n          <Button variant=\"contained\" href={`mailto:${email}`} className={styles.emailButton}>\n            <Icon.Mail className={styles.emailIcon} />\n            이메일\n          </Button>\n        </Box>\n        <Grid container>\n          <Grid item xs={4}>\n            <Button href={social.github} target=\"_blank\" className={styles.externalLinkbuton}>\n              <Icon.GitHub />\n            </Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Button href={social.linkedin} target=\"_blank\" className={styles.externalLinkbuton}>\n              <Icon.Linkedin />\n            </Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Button href={social.rss} target=\"_blank\" className={styles.externalLinkbuton}>\n              <Icon.Rss />\n            </Button>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Bio;\n","import React from 'react';\nimport WidgetCard from 'components/Cards/WidgetCard';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { Group } from 'models/post';\nimport { Chip, Avatar, makeStyles, Theme } from '@material-ui/core';\nimport { linkEvent } from 'utils/loggers';\nimport { useCallback } from 'react';\nimport { toKebabCase } from 'utils/string';\n\nconst useStyles = makeStyles<Theme>(({ spacing, typography }) => ({\n  nonDecorationText: {\n    textDecoration: 'none',\n  },\n  chip: {\n    fontSize: typography.caption.fontSize,\n    marginRight: spacing(1),\n    marginBottom: spacing(1),\n  },\n}));\n\nconst TagsCard = () => {\n  const styles = useStyles();\n  const {\n    allMarkdownRemark: { group: tags },\n  }: Group = useStaticQuery(graphql`\n    query TagsQuery {\n      allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  const handleTagClick = useCallback((url: string) => {\n    linkEvent(url, '태그 링크 클릭');\n  }, []);\n\n  return (\n    <WidgetCard title=\"태그\">\n      {tags.map(tag => (\n        <Link key={tag.fieldValue} to={`/tags/${toKebabCase(tag.fieldValue)}`} className={styles.nonDecorationText}>\n          <Chip\n            className={styles.chip}\n            size=\"small\"\n            label={tag.fieldValue}\n            avatar={<Avatar>{tag.totalCount}</Avatar>}\n            onClick={() => handleTagClick(`/tags/${toKebabCase(tag.fieldValue)}`)}\n          />\n        </Link>\n      ))}\n    </WidgetCard>\n  );\n};\n\nexport default TagsCard;\n","import React from 'react';\nimport Layout from 'components/Layout/Base';\nimport SEO from 'components/SEO';\nimport BioCard from 'components/Cards/BioCard';\nimport TagsCard from 'components/Cards/TagsCard';\nimport RecentPostsCard from 'components/Cards/RecentPostsCard';\n\nconst TagsPage = () => {\n  return (\n    <Layout left={<BioCard />} right={<RecentPostsCard />}>\n      <SEO title=\"태그\" />\n      <TagsCard />\n    </Layout>\n  );\n};\n\nexport default TagsPage;\n"],"sourceRoot":""}