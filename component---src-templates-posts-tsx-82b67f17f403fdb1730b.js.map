{"version":3,"sources":["webpack:///./src/templates/Posts.tsx"],"names":["PostsTemplate","data","location","allMarkdownRemark","posts","edges","pageInfo","left","css","right","map","p","node","pageCount","currentPage","defaultUrl","pageQuery"],"mappings":"waA4DeA,UAnCO,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAsB,EAG/CD,EADFE,kBAA4BC,EAFqB,EAE5BC,MAAcC,EAFc,EAEdA,SAGrC,OACE,YAAC,IAAD,CACEJ,SAAUA,EACVK,KACE,YAAC,WAAD,KACE,YAAC,IAAD,CACEC,IAAKA,YAAF,MAIH,YAAC,IAAD,OAEF,YAAC,IAAD,KACE,YAAC,IAAD,QAINC,MACE,YAAC,IAAD,KACE,YAAC,IAAD,QAIJ,YAAC,IAAD,MACA,YAAC,IAAD,CAAOL,MAAOA,EAAMM,KAAI,SAACC,GAAD,OAAsBA,EAAEC,UAChD,YAAC,IAAD,CAAWC,UAAWP,EAASO,UAAWC,YAAaR,EAASQ,YAAaC,WAAW,QAOvF,IAAMC,EAAY","file":"component---src-templates-posts-tsx-82b67f17f403fdb1730b.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { graphql } from 'gatsby';\nimport { Box } from '@material-ui/core';\nimport BioCard from 'components/Cards/BioCard';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Posts from 'components/Posts';\nimport RecentPostsCard from 'components/Cards/RecentPostsCard';\nimport CategoriesCard from 'src/components/Cards/CategoriesCard';\nimport Paginator from 'src/components/Paginator';\nimport { Fragment } from 'react';\n\ninterface Props {\n  data: {\n    allMarkdownRemark: any;\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n  location: Location;\n}\n\nconst PostsTemplate = ({ data, location }: Props) => {\n  const {\n    allMarkdownRemark: { edges: posts, pageInfo },\n  } = data;\n\n  return (\n    <Layout\n      location={location}\n      left={\n        <Fragment>\n          <Box\n            css={css`\n              margin-bottom: 1rem;\n            `}\n          >\n            <BioCard />\n          </Box>\n          <Box>\n            <CategoriesCard />\n          </Box>\n        </Fragment>\n      }\n      right={\n        <Box>\n          <RecentPostsCard />\n        </Box>\n      }\n    >\n      <SEO />\n      <Posts posts={posts.map((p: { node: any }) => p.node)} />\n      <Paginator pageCount={pageInfo.pageCount} currentPage={pageInfo.currentPage} defaultUrl=\"/\" />\n    </Layout>\n  );\n};\n\nexport default PostsTemplate;\n\nexport const pageQuery = graphql`\n  query PostsQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(skip: $skip, limit: $limit, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n            path\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            categories\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n      pageInfo {\n        currentPage\n        pageCount\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}