{"version":3,"sources":["webpack:///./src/templates/Posts.tsx"],"names":["PostsTemplate","data","location","lang","pageContext","allMarkdownRemark","posts","edges","pageInfo","map","p","node","defaultUrl","pageQuery"],"mappings":"6MAuCeA,UAjBO,SAAC,GAAqD,IAAnDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,SAAyBC,EAAoB,EAAnCC,YAAeD,KAAoB,EAGtEF,EADFI,kBAA4BC,EAF4C,EAEnDC,MAAcC,EAFqC,EAErCA,SAGrC,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CAAKL,KAAMA,IACX,YAAC,IAAD,CACEG,MAAOA,EAAMG,KAAI,SAACC,GAAD,OAAsBA,EAAEC,QACzCH,SAAQ,iBAAOA,EAAP,CAAiBI,WAAY,IAAKT,SAC1CD,SAAUA,MAQX,IAAMW,EAAY","file":"component---src-templates-posts-tsx-1798e8d9f6092662eae7.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { graphql } from 'gatsby';\nimport PostsLayout from 'components/Layout/Posts';\nimport SEO from 'components/SEO';\nimport { Fragment } from 'react';\n\ninterface Props {\n  data: {\n    allMarkdownRemark: any;\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n  location: Location;\n  pageContext: {\n    lang: string;\n  };\n}\n\nconst PostsTemplate = ({ data, location, pageContext: { lang } }: Props) => {\n  const {\n    allMarkdownRemark: { edges: posts, pageInfo },\n  } = data;\n\n  return (\n    <Fragment>\n      <SEO lang={lang} />\n      <PostsLayout\n        posts={posts.map((p: { node: any }) => p.node)}\n        pageInfo={{ ...pageInfo, defaultUrl: '/', lang }}\n        location={location}\n      />\n    </Fragment>\n  );\n};\n\nexport default PostsTemplate;\n\nexport const pageQuery = graphql`\n  query PostsQuery($skip: Int!, $limit: Int!, $lang: String!) {\n    allMarkdownRemark(\n      skip: $skip\n      limit: $limit\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { lang: { eq: $lang } } }\n    ) {\n      edges {\n        node {\n          ...PostListQuery\n        }\n      }\n      pageInfo {\n        currentPage\n        pageCount\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}