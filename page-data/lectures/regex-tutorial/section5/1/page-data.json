{"componentChunkName":"component---src-templates-lecture-page-template-tsx","path":"/lectures/regex-tutorial/section5/1/","result":{"data":{"markdownRemark":{"id":"72c53998-36cb-59e7-847e-4981cf1d6bb2","excerpt":"이번 강의에서는 캡처 그룹에 대해서 한번 알아보겠습니다. 캡처라는게 뭘까요? 저희가 캡처라고 하면 보통 어떤 게 떠오르죠? 일반적으로 스크린샷같은 걸 뜰 때 보통 캡처라는 말을 많이 쓰죠? 정규식에서 패턴을 캡처한다는 말의 의미도 정확히 이거랑 똑같…","html":"<p>이번 강의에서는 캡처 그룹에 대해서 한번 알아보겠습니다.</p>\n<p>캡처라는게 뭘까요? 저희가 캡처라고 하면 보통 어떤 게 떠오르죠? 일반적으로 스크린샷같은 걸 뜰 때 보통 캡처라는 말을 많이 쓰죠?</p>\n<p>정규식에서 패턴을 캡처한다는 말의 의미도 정확히 이거랑 똑같습니다. 결국 어떤 패턴을 캡처를 떠서 저장하는거에요. 그리고 저장을 할 수 있으면 또 뭘 할 수 있을까요? 저장된 패턴에 접근해서 다시 불러올 수도 있겟죠? 그냥 저장만 하는 거면 의미가 없잖아요?</p>\n<p>즉, 정규식에서의 캡처는 내가 원하는 패턴을 잠시 저장했다가 다시 불러올 수 있는 기능이에요. 그리고 이렇게 캡처할 패턴들을 묶어준 것을 바로 캡처 그룹이라고 부릅니다.</p>\n<p>자 백문이불여일견이니까 한번 문법을 볼까요? 어차피 뒤에서 다시 한번 자세하게 설명을 해드릴 거기 때문에 지금 이 강의는 그냥 “아 대충 이런 느낌이구나” 정도로 핥고 넘어가셔도 됩니다. 그러니까 눈에 힘 풀고 편안하게 들으시면 돼요.</p>\n<p>여기 Hello 라는 패턴이 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/Hello/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>캡처 그룹은 굉장히 간단하게 만들 수 있는데요. 그냥 이렇게 괄호로 내가 캡쳐할 패턴을 묶어주면 이 부분이 캡처 그룹이 되는 겁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/Hel(lo)/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>간단하죠?</p>\n<p>하단에 Tools를 볼까요? 정규식 표현에서 지금 괄호로 묶여있는 l과 o가 Capturing Group이라고 표시되어있죠?</p>\n<p>그리고 이 옆에 #1이라고 적혀있는 것은 첫 번째 캡쳐 그룹이라는 의미입니다. 첫 번째라는 것은 당연히 두 번째도 있을 수 있다는거죠?</p>\n<p>그러니까 결국 이 캡쳐 그룹이라는 걸 반드시 한 정규식 표현에서 하나만 써야되는 것이 아닙니다. 그냥 원하는 만큼 만들 수 있어요. 보세요.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/(He)l(lo)/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이 앞에 H와 e를 다시 한번 캡처 그룹으로 묶어줬습니다. 그러면 이제 방금 만든 이 캡처 그룹이 1번이 되었고, 뒤에 있는 이 l,o가 있는 캡쳐 그룹이 2번이 되었죠?</p>\n<p>제가 아까 강의 시작 부분에서 캡처 그룹을 소개 할 때 캡처를 했으면 다시 불러올 수도 있어야한다고 했잖아요? 이 숫자는 캡처 그룹에 저장된 패턴을 다시 불러올 때 쓰는거에요.</p>\n<p>왜냐면 캡처 그룹이 이렇게 여러 개니까 “어떤 캡처 그룹에 있는 걸 가져올거냐” 이걸 명시해야되잖아요? 컴퓨터한테 알려줘야 되잖아요?</p>\n<p>이 숫자가 바로 그 역할을 하는거에요. 첫 번째 캡쳐 그룹에 있는 패턴을 불러와줘, 혹은 두 번째 캡쳐 그룹에 있는 패턴을 불러와줘. 이렇게 말이죠.</p>\n<p>자 그럼 이 숫자를 어떻게 쓰는 걸까요? 이렇게 씁니다. (역참조)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/(He)l(lo)\\1/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>저 \\1이 첫 번째 캡처 그룹 안에 있는 패턴을 다시 불러오겠다는 의미에요. 즉, 지금 이 패턴은 저 캡처 그룹 안에 들어가있는 H,e가 연속으로 등장하는 패턴을 불러오겠다는 거겠죠? 그러면 두 번째 캡쳐 그룹은 어떻게 접근할까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/(He)l(lo)\\2/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>역슬래쉬 2를 쓰면 됩니다. 간단하죠? 이런 느낌이에요. 괄호로 묶어서 저장하고 숫자로 다시 불러오고. 간단하죠?</p>\n<p>그리고 이 캡처 그룹은 사실 한 가지 기능을 또 가지고 있는데요. 이게 캡처 “그룹”이잖아요? 바로 패턴을 묶어서 그룹핑 할 수 있는 기능입니다. 그룹핑은 간단히 얘기해서 이 캡쳐 그룹 안에 있는 여러 개의 패턴들이 마치 하나의 패턴인 것처럼 만들 수 있는거에요. 그룹핑이 원래 이런 거잖아요?</p>\n<p>그래서 이런 식으로 수량자와 조합해서 사용하면 “어떤 복잡한 패턴이 여러 번 등장한다”라는 표현을 할 수도 있어요</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/(lo){3}/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>물론 지금 이 강의에서는 캡쳐 그룹이 대충 이런 느낌이다라는 것을 소개하고 있는 거기 때문에 여기까지만 보면 “이게 뭐야?” “그래서 이걸 어따 쓰는건데?”라고 하실 수 있는데, 개인적으로는 이 기능이 정규식에서 가장 꿀 기능이라고 생각합니다.</p>\n<p>이 캡쳐 그룹에 대한 이해만 하고 있어도 굉장히 많은 문제들을 해결할 수가 있어요. 그러면 그 문제들이 도대체 무엇이냐…하는 것은 다음에 이어지는 강의에서 캡쳐링과 그룹핑을 더 자세히 알아보면서 함께 풀어보도록 하겠습니다.</p>","tableOfContents":"","fields":{"slug":"lecture.regex-tutorial.section5.1","lecture":"regex-tutorial","category":"content"},"frontmatter":{"title":"캡처 그룹이란 무엇인가요?"}}},"pageContext":{"slug":"lecture.regex-tutorial.section5.1","previous":{"fields":{"slug":"lecture.regex-tutorial.section5.3","path":"/lectures/regex-tutorial/section5/3/"}},"next":{"fields":{"slug":"lecture.regex-tutorial.section4","path":"/lectures/regex-tutorial/section4/"}}}}}