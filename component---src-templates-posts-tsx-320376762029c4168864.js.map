{"version":3,"sources":["webpack:///./src/templates/Posts.tsx"],"names":["PostsTemplate","data","location","allMarkdownRemark","posts","edges","pageInfo","map","p","node","defaultUrl","pageQuery"],"mappings":"qLA+BeA,UAdO,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAsB,EAG/CD,EADFE,kBAA4BC,EAFqB,EAE5BC,MAAcC,EAFc,EAEdA,SAGrC,OACE,YAAC,IAAD,CACEF,MAAOA,EAAMG,KAAI,SAACC,GAAD,OAAsBA,EAAEC,QACzCH,SAAQ,+BAAOA,GAAP,IAAiBI,WAAY,MACrCR,SAAUA,KAOT,IAAMS,EAAY","file":"component---src-templates-posts-tsx-320376762029c4168864.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { graphql } from 'gatsby';\nimport PostsLayout from 'components/Layout/Posts';\n\ninterface Props {\n  data: {\n    allMarkdownRemark: any;\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n  location: Location;\n}\n\nconst PostsTemplate = ({ data, location }: Props) => {\n  const {\n    allMarkdownRemark: { edges: posts, pageInfo },\n  } = data;\n\n  return (\n    <PostsLayout\n      posts={posts.map((p: { node: any }) => p.node)}\n      pageInfo={{ ...pageInfo, defaultUrl: '/' }}\n      location={location}\n    />\n  );\n};\n\nexport default PostsTemplate;\n\nexport const pageQuery = graphql`\n  query PostsQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(skip: $skip, limit: $limit, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          ...PostListQuery\n        }\n      }\n      pageInfo {\n        currentPage\n        pageCount\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}