{"version":3,"sources":["webpack:///./src/components/Cards/Widgets/RecentPosts.tsx","webpack:///./src/hooks/useAboutData.ts","webpack:///./src/hooks/useRelatedProjectPosts.ts","webpack:///./src/containers/AboutPage/SectionTitle.tsx","webpack:///./node_modules/react-feather/dist/icons/play.js","webpack:///./src/containers/AboutPage/ProjectIntroduction.tsx","webpack:///./src/containers/AboutPage/index.tsx","webpack:///./src/pages/about.tsx","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/components/Cards/Widgets/index.tsx"],"names":["useStyles","makeStyles","wrapper","margin","padding","RecentPostsCard","onClick","styles","lang","useRecoilState","languageAtom","posts","useAllPosts","recent","useMemo","splice","handleRecentPostClick","useCallback","title","className","map","post","index","key","fields","path","thumbnail","frontmatter","childImageSharp","fixed","src","date","categories","useAboutData","profile","useProfileInfo","relatedPosts","images","fontWeight","divider","spacing","SectionTitle","description","Box","marginTop","Typography","variant","component","gutterBottom","Divider","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Play","_ref","ref","_ref$color","color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","string","oneOfType","number","displayName","shape","shadows","palette","borderRadius","marginBottom","boxShadow","buttonWrapper","button","backgroundColor","grey","relatedPostsWrapper","ProjectIntroduction","children","githubLink","demoLink","logger","handleGithubClick","click","handleDemoClick","handlePostClick","fluid","Grid","container","justify","item","Button","href","Paper","SimplePostItem","generateLogger","handleLinkedinClick","handleEmailClick","fieldValueFilter","value","node","fieldValue","introButtonWrapper","alert","useButtonStyles","github","linkedIn","theme","main","common","white","opacity","email","AboutPage","buttonStyles","siteMetadata","site","group","allMarkdownRemark","data","bookPosts","filter","nodes","solarSystemPosts","simpleAnnPosts","simpleWaveformPosts","useEffect","state","Layout","right","RecentPosts","rightSticky","SEO","Card","CardContent","maxWidth","overflow","avatar","role","aria-label","xs","lg","social","startIcon","linkedin","author","vueWithCoffee","solarSystem","simpleAnn","simpleWaveform","zarbis","props","action","classes","_props$component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","display","root","content","withStyles","alignItems","flex","marginRight","alignSelf","name","WidgetCard"],"mappings":"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","file":"component---src-pages-about-tsx-f94adf48cbcfdc04063d.js","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport WidgetCard from 'components/Cards/Widgets';\nimport { makeStyles } from '@material-ui/core';\nimport { useRecoilState } from 'recoil';\nimport { languageAtom } from 'atoms/language';\nimport { useAllPosts } from 'hooks/useAllPosts';\n\nconst MAX_POST_COUNT = 5;\nconst useStyles = makeStyles({\n  wrapper: {\n    margin: 0,\n    padding: 0,\n  },\n});\n\ninterface Props {\n  onClick?: () => void;\n}\nconst RecentPostsCard = ({ onClick }: Props) => {\n  const styles = useStyles();\n  const [lang] = useRecoilState(languageAtom);\n  const posts = useAllPosts(lang);\n\n  const recent = useMemo(() => {\n    return posts.splice(0, MAX_POST_COUNT);\n  }, [posts]);\n\n  const handleRecentPostClick = useCallback(() => {\n    onClick?.();\n  }, [onClick]);\n\n  return (\n    <WidgetCard title=\"최근 글\">\n      <ul className={styles.wrapper}>\n        {recent.map((post, index) => (\n          <SimplePostItem\n            key={post.fields.path ?? index}\n            thumbnail={post.frontmatter.thumbnail?.childImageSharp?.fixed?.src ?? ''}\n            title={post.frontmatter.title ?? ''}\n            date={post.frontmatter.date}\n            path={post.fields.path ?? '/'}\n            categories={post.frontmatter.categories}\n            onClick={handleRecentPostClick}\n          />\n        ))}\n      </ul>\n    </WidgetCard>\n  );\n};\n\nexport default RecentPostsCard;\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport { useProfileInfo } from './useProfileInfo';\nimport { useRelatedProjectPosts } from './useRelatedProjectPosts';\n\ntype AboutImagesKey = 'simpleAnn' | 'simpleWaveform' | 'solarSystem' | 'vueWithCoffee' | 'zarbis';\n\ntype AboutImagesQueryResult = {\n  [key in AboutImagesKey]: {\n    childImageSharp: {\n      fluid: FluidObject;\n    };\n  };\n};\n\nexport const useAboutData = () => {\n  const profile = useProfileInfo();\n  const relatedPosts = useRelatedProjectPosts();\n  const images: AboutImagesQueryResult = useStaticQuery(graphql`\n    query AboutImagesQuery {\n      simpleAnn: file(absolutePath: { regex: \"/simple-ann.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      simpleWaveform: file(absolutePath: { regex: \"/simple-waveform.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      solarSystem: file(absolutePath: { regex: \"/solar-system.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      vueWithCoffee: file(absolutePath: { regex: \"/vue-with-coffee/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      zarbis: file(absolutePath: { regex: \"/zarbis/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return {\n    ...profile,\n    ...relatedPosts,\n    ...images,\n  };\n};\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { GroupItem, Post } from 'models/post';\n\ninterface QueryResult {\n  allMarkdownRemark: {\n    group: Array<GroupItem<Post>>;\n  };\n}\nexport const useRelatedProjectPosts = () => {\n  const data: QueryResult = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: frontmatter___relatedProject) {\n          fieldValue\n          totalCount\n          nodes {\n            fields {\n              slug\n              path\n              lang\n            }\n            frontmatter {\n              title\n              date\n              categories\n              thumbnail {\n                childImageSharp {\n                  fixed(width: 320, height: 320, quality: 100, cropFocus: CENTER) {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data;\n};\n","import React, { ReactNode } from 'react';\nimport { Box, Typography, Divider, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles<Theme>(({ spacing }) => ({\n  title: {\n    fontWeight: 'bold',\n  },\n  divider: {\n    margin: `${spacing(2)}px 0`,\n  },\n}));\n\ninterface Props {\n  title: string;\n  description?: ReactNode;\n}\nconst SectionTitle = ({ title, description }: Props) => {\n  const styles = useStyles();\n\n  return (\n    <Box marginTop=\"2rem\">\n      <Typography variant=\"h5\" component=\"h2\" className={styles.title} gutterBottom>\n        {title}\n      </Typography>\n      {description && <Typography variant=\"body2\">{description}</Typography>}\n      <Divider className={styles.divider} />\n    </Box>\n  );\n};\n\nexport default SectionTitle;\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Play = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"5 3 19 12 5 21 5 3\"\n  }));\n});\nPlay.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlay.displayName = 'Play';\nexport default Play;","import React, { ReactNode, useCallback } from 'react';\nimport { Box, Typography, Button, Grid, makeStyles, Paper, Divider, Theme } from '@material-ui/core';\nimport * as Icon from 'react-feather';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport { Post } from 'models/post';\nimport Image, { FluidObject } from 'gatsby-image';\nimport { Logger } from 'utils/loggers';\n\nconst useStyles = makeStyles<Theme>(({ shape, shadows, palette, spacing }) => ({\n  thumbnail: {\n    borderRadius: shape.borderRadius,\n    marginBottom: spacing(2),\n    boxShadow: shadows[3],\n  },\n  buttonWrapper: {\n    marginBottom: spacing(4),\n  },\n  button: {\n    backgroundColor: palette.grey['900'],\n    color: palette.grey['100'],\n    width: '100%',\n    '&:hover': {\n      backgroundColor: palette.grey['700'],\n      color: palette.grey['100'],\n    },\n  },\n  relatedPostsWrapper: {\n    marginTop: spacing(2),\n  },\n  relatedPosts: {\n    padding: spacing(2),\n  },\n  divider: {\n    margin: `${spacing(4)}px 0`,\n  },\n}));\n\ninterface Props {\n  title: string;\n  children: ReactNode;\n  thumbnail: FluidObject;\n  githubLink?: string;\n  demoLink?: string;\n  posts?: Post[];\n  divider?: boolean;\n  logger?: Logger;\n}\nconst ProjectIntroduction = ({\n  title,\n  children,\n  thumbnail,\n  githubLink,\n  demoLink,\n  posts = [],\n  divider = true,\n  logger,\n}: Props) => {\n  const styles = useStyles();\n\n  const handleGithubClick = useCallback(() => {\n    logger?.click(`깃허브 링크_<${title}>`);\n  }, [logger, title]);\n  const handleDemoClick = useCallback(() => {\n    logger?.click(`데모 링크_<${title}>`);\n  }, [logger, title]);\n  const handlePostClick = useCallback(() => {\n    logger?.click('관련 포스팅 링크');\n  }, [logger]);\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n        # {title}\n      </Typography>\n      <Image fluid={thumbnail} className={styles.thumbnail} />\n      <Grid spacing={1} container justify=\"center\" className={styles.buttonWrapper}>\n        {githubLink && (\n          <Grid item>\n            <Button href={githubLink} className={styles.button} onClick={handleGithubClick} target=\"_blank\">\n              <Icon.GitHub />\n            </Button>\n          </Grid>\n        )}\n        {demoLink && (\n          <Grid item>\n            <Button href={demoLink} className={styles.button} onClick={handleDemoClick} target=\"_blank\">\n              <Icon.Play />\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n      {children}\n      <Box className={styles.relatedPostsWrapper}>\n        <Paper className={styles.relatedPosts} variant=\"outlined\">\n          <Typography variant=\"h6\" component=\"h4\" gutterBottom>\n            관련 포스팅\n          </Typography>\n          {posts.map(({ frontmatter, fields }, index) => (\n            <SimplePostItem\n              key={fields.path ?? index}\n              thumbnail={frontmatter.thumbnail.childImageSharp?.fixed?.src ?? ''}\n              title={frontmatter.title ?? ''}\n              date={frontmatter.date}\n              path={fields.path ?? '/'}\n              categories={frontmatter.categories}\n              onClick={handlePostClick}\n            />\n          ))}\n        </Paper>\n      </Box>\n      {divider && <Divider className={styles.divider} />}\n    </Box>\n  );\n};\n\nexport default ProjectIntroduction;\n","import React, { useEffect } from 'react';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Image from 'gatsby-image';\nimport { useAboutData } from 'hooks/useAboutData';\nimport { Box, Typography, Grid, Button, Card, CardContent, makeStyles, Theme } from '@material-ui/core';\nimport * as Icon from 'react-feather';\nimport RecentPostsCard from 'components/Cards/Widgets/RecentPosts';\nimport SectionTitle from './SectionTitle';\nimport ProjectIntroduction from './ProjectIntroduction';\nimport theme from 'utils/theme';\nimport { Post, GroupItem } from 'models/post';\nimport { generateLogger } from 'utils/loggers';\n\nconst logger = generateLogger('소개 페이지');\nconst handleRecentPostClick = () => {\n  logger.click('최근 포스팅 링크');\n};\nconst handleGithubClick = () => {\n  logger.click('깃허브 링크');\n};\nconst handleLinkedinClick = () => {\n  logger.click('링크드인 링크');\n};\nconst handleEmailClick = () => {\n  logger.click('이메일 링크');\n};\n\nconst fieldValueFilter = (value: string) => (node: GroupItem<Post>) => node.fieldValue === value;\nconst useStyles = makeStyles<Theme>(({ spacing }) => ({\n  introButtonWrapper: {\n    margin: `${spacing(4)}px 0`,\n  },\n  alert: {\n    marginBottom: spacing(2),\n  },\n}));\nconst useButtonStyles = makeStyles<Theme>(({ palette: { grey } }) => ({\n  github: {\n    backgroundColor: grey['900'],\n    color: grey['100'],\n    width: '100%',\n    '&:hover': {\n      backgroundColor: grey['700'],\n      color: grey['100'],\n    },\n  },\n  linkedIn: {\n    backgroundColor: theme.palette.linkedIn.main,\n    color: theme.palette.common.white,\n    width: '100%',\n    '&:hover': {\n      backgroundColor: theme.palette.linkedIn.main,\n      opacity: 0.8,\n    },\n  },\n  email: {\n    backgroundColor: grey['300'],\n    color: grey['900'],\n    width: '100%',\n  },\n}));\n\nconst AboutPage = () => {\n  const styles = useStyles();\n  const buttonStyles = useButtonStyles();\n  const {\n    site: { siteMetadata },\n    allMarkdownRemark: { group },\n    ...data\n  } = useAboutData();\n\n  const { nodes: bookPosts } = group.filter(fieldValueFilter('vuejsBook'))[0];\n  const { nodes: solarSystemPosts } = group.filter(fieldValueFilter('solarSystem'))[0];\n  const { nodes: simpleAnnPosts } = group.filter(fieldValueFilter('simpleAnn'))[0];\n  const { nodes: simpleWaveformPosts } = group.filter(fieldValueFilter('simpleWaveform'))[0];\n\n  useEffect(() => {\n    logger.state();\n  }, []);\n\n  return (\n    <Layout right={<RecentPostsCard onClick={handleRecentPostClick} />} profile={false} rightSticky={true}>\n      <SEO title=\"About Evan Moon\" />\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Box>\n            <Box maxWidth={500} margin=\"2rem auto\" borderRadius={6} overflow=\"hidden\">\n              <Image fluid={data.avatar.childImageSharp.fluid} />\n            </Box>\n\n            <Typography>\n              안녕하세요. 물리와 우주 덕후 프로그래머 문동욱입니다.{' '}\n              <span role=\"img\" aria-label=\"hi-emoji\">\n                🖐\n              </span>\n              <br />\n              <br />\n              현재 서울에 거주하며 대한민국의 IT 회사를 돌아다니면서 프론트엔드 개발자로 일하고 있습니다.\n              <br />\n              <br />\n              메인 포지션은 웹 프론트엔드이기는 하지만, 딱히 지식을 가려먹는 타입은 아니라서 폭 넓고 보편적인 지식을\n              쌓으려고 하고 있습니다. 딱히 프로그래밍과 관련된 것이 아니라도 필요하다 싶으면 그냥 공부하는 편입니다.\n              <br />\n              <br />\n              글쓰기를 좋아하기 때문에 이 블로그를 운영하고 있긴 한데, 딱히 기술적인 것이 아니라도 그냥 쓰고 싶은 주제가\n              있으면 아무거나 쓰기 때문에 기술 블로그와 에세이 블로그의 혼종 느낌으로 운영하고 있습니다.\n            </Typography>\n            <Grid container spacing={1} className={styles.introButtonWrapper}>\n              <Grid item xs={12} lg={4}>\n                <Button\n                  href={siteMetadata.social.github}\n                  className={buttonStyles.github}\n                  size=\"large\"\n                  startIcon={<Icon.GitHub />}\n                  onClick={handleGithubClick}\n                  target=\"_blank\"\n                >\n                  Github\n                </Button>\n              </Grid>\n              <Grid item xs={12} lg={4}>\n                <Button\n                  href={siteMetadata.social.linkedin}\n                  className={buttonStyles.linkedIn}\n                  size=\"large\"\n                  startIcon={<Icon.Linkedin />}\n                  onClick={handleLinkedinClick}\n                  target=\"_blank\"\n                >\n                  Linkedin\n                </Button>\n              </Grid>\n              <Grid item xs={12} lg={4}>\n                <Button\n                  href={`mailto:${siteMetadata.author.email}`}\n                  className={buttonStyles.email}\n                  size=\"large\"\n                  startIcon={<Icon.Mail />}\n                  onClick={handleEmailClick}\n                  target=\"_blank\"\n                >\n                  Email\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box component=\"section\">\n            <SectionTitle title=\"저서\" />\n            <ProjectIntroduction\n              title=\"커피 한 잔 마시며 끝내는 VueJS\"\n              thumbnail={data.vueWithCoffee.childImageSharp.fluid}\n              githubLink=\"https://github.com/CanDoVueJS\"\n              demoLink=\"http://yes24.com/Product/Goods/76639545\"\n              posts={bookPosts}\n              divider={false}\n            >\n              <Typography gutterBottom>\n                이 책에서는 VueJS에 대한 API뿐만 아니라 어떻게 활용하면 되는지에 대해 효과적으로 설명한다. 이러한 활용\n                예제는 실전 애플리케이션을 구축해나가는 과정을 통해 쉽고 효과적으로 학습한다.\n                <br />\n                <br />\n                어플리케이션은 실무와 동일하게 REST API를 제공하는 백엔드와 통신을 통해 데이터를 받아온 후\n                클라이언트에서 상태 관리를 하는 과정으로 진행되며, 이때 필요한 REST API는 Github을 통해 프로젝트를\n                클론받는 방식으로 제공하고 있다.\n                <br />\n                <br />\n                그뿐만 아니라 실전 애플리케이션을 구축해나가는 과정에서 겪을 수 있는 트러블 슈팅과 필자의 실무 경험을\n                바탕으로 하는 조언도 함께 학습한다.\n              </Typography>\n            </ProjectIntroduction>\n          </Box>\n          <Box component=\"section\">\n            <SectionTitle\n              title=\"Toy Projects\"\n              description={`필요해서 만든 김에 공유하고 싶거나, 재미 혹은 개인 만족을 위해서 만드는 프로젝트들. 딱히 완성이라고\n              할만한 프로젝트는 없으며, 기능은 시간 날 때마다 꾸준히 추가 중이다.`}\n            />\n            <ProjectIntroduction\n              title=\"Solar System TS\"\n              thumbnail={data.solarSystem.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/solarsystemts\"\n              demoLink=\"https://solar-system-ts.herokuapp.com/\"\n              posts={solarSystemPosts}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                TypeScript, Vue.js, Three.js(WebGL)을 사용해 제작한 실시간 태양계 시뮬레이터. 중력을 사용하여 구현하려고\n                했으나 천체의 질량 데이터가 미묘하게 맞지 않는건지 뭔지 궤도가 제 멋대로 돌아서 일단 보류.\n                <br />\n                <br />\n                대신 케플러 궤도 6요소와 케플러 방정식 + 레가르 다항식을 사용하여 현재 날짜에 해당 행성이 어디에 있는지\n                위치를 추적하는 방향으로 구현하였다.\n              </Typography>\n            </ProjectIntroduction>\n            <ProjectIntroduction\n              title=\"Simple ANN\"\n              thumbnail={data.simpleAnn.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/simple-ann\"\n              demoLink=\"https://simple-ann.herokuapp.com/\"\n              posts={simpleAnnPosts}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                TypeScript와 React, D3, ChartJS를 사용해 제작한 간단한 인공 신경망. 원래는 회사 세미나 발표 용도로\n                간단하게 만들었는데 생각보다 재밌어서 계속 건드는 중.\n                <br />\n                <br />\n                레이어의 개수와 노드의 개수, 학습 횟수 등을 설정하고 학습 과정에서 y값의 변화와 Loss의 변화를\n                시각화하였다. 추후 여러 개의 Activation Function을 선택할 수 있는 기능과 레이어마다 노드의 개수를 다르게\n                하는 등 네트워크 커스터마이징을 좀 더 다채롭게 할 수 있는 기능을 추가할 예정이다.\n              </Typography>\n            </ProjectIntroduction>\n            <ProjectIntroduction\n              title=\"Simple Waveform Visualizer\"\n              thumbnail={data.simpleWaveform.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/simple-waveform-visualizer\"\n              demoLink=\"https://simple-audio-waveform.herokuapp.com/\"\n              posts={simpleWaveformPosts}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                오디오 파일을 업로드해서 여러가지 오디오 이펙터를 걸어볼 수 있는 어플리케이션. 현재 개발된 이펙터는\n                Compressor, Reverb, Delay, Filter (LPF, HPF), EQ, Distortion, Tremolo 정도.\n                <br />\n                <br />\n                다음 단계는 오실레이터를 사용하여 신디사이저를 만들거나, 트랙을 나누어서 동시에 여러 오디오 소스를\n                재생하며 이펙터를 사용할 수 있도록 변경할 예정.\n              </Typography>\n            </ProjectIntroduction>\n            <ProjectIntroduction\n              title=\"Zarbis\"\n              thumbnail={data.zarbis.childImageSharp.fluid}\n              githubLink=\"https://github.com/evan-moon/zarbis\"\n              demoLink=\"https://zarbis.herokuapp.com/\"\n              posts={simpleWaveformPosts}\n              divider={false}\n              logger={logger}\n            >\n              <Typography gutterBottom>\n                시계 + 날씨 + 미세먼지 정보 + 이쁜 사진 대시보드.\n                <br />\n                <br />\n                집에 노트북이 남길래 하나를 대시보드 전용으로 쓰려고 만든 웹 어플리케이션. 크롬 익스텐션인 `Momentum`를\n                쓰고 있었지만 비염이 심한 본인을 위해 미세먼지 농도도 함께 보고 싶었는데 얘네가 해당 기능 제공을\n                안해줘서 하나 새로 만들어서 쓰는 중.\n                <br />\n                <br />\n                배경사진은 날씨에 따라 알맞은 사진으로 변경되어 사용자가 굳이 구석에 있는 날씨 정보를 눈여겨 보지\n                않더라도 한 눈에 현재 날씨를 알아볼 수 있도록 함.\n              </Typography>\n            </ProjectIntroduction>\n          </Box>\n        </CardContent>\n      </Card>\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\nimport Page from 'containers/AboutPage';\nexport default () => <Page />;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { ReactNode } from 'react';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\ninterface Props {\n  title?: string;\n  children: ReactNode;\n}\nconst WidgetCard = ({ title = '', children }: Props) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport default WidgetCard;\n"],"sourceRoot":""}