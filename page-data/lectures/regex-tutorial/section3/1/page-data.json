{"componentChunkName":"component---src-templates-lecture-page-template-tsx","path":"/lectures/regex-tutorial/section3/1/","result":{"data":{"markdownRemark":{"id":"7f266bf6-8087-5d4a-9769-100f51f977db","excerpt":"이전 강의에서는 문자들의 집합을 의미하는 캐릭터 클래스와 캐릭터셋을 공부해봤는데요. 이번 강의에서는 이렇게 캐릭터클래스나 캐릭터셋을 사용한 패턴이 몇 번이나 등장하는지를 잡아낼 수 있는 수량자에 대해서 한번 이야기를 해보려고 합니다. 자, 수량자. …","html":"<p>이전 강의에서는 문자들의 집합을 의미하는 캐릭터 클래스와 캐릭터셋을 공부해봤는데요. 이번 강의에서는 이렇게 캐릭터클래스나 캐릭터셋을 사용한 패턴이 몇 번이나 등장하는지를 잡아낼 수 있는 수량자에 대해서 한번 이야기를 해보려고 합니다.</p>\n<p>자, 수량자.  영어로는 Quantifier라고 합니다. 뭔가 이름만 봐도 양과 관련된 거겠죠? 근데 사실 뭐 실생활 속에서 수량자든 Quantifier든 별로 이름을 부르는 일이 없긴해요.</p>\n<p>그냥 다들 수량자 생긴대로 +(플러스), 물음표(?) 이렇게 얘기하는 경우가 더 많기는 한 것 같습니다. 그래도 우리가 뭘 쓸 때 적어도 이게 뭔지는 알고 쓰는 게 좋겠죠?</p>\n<p>자 수량자에 대해서 본격적으로 알아보기 전에 이 녀석이 왜 사용되어야하는지, 그리고 어떤 상황일 때 사용하는 것들인지 한번 가볍게 흝어보도록 할게요.</p>\n<p>먼저 수량자는 왜 쓰는 걸까요?</p>\n<p>우리가 앞선 강의에서 캐릭터 클래스나 캐릭터 셋을 왜 쓴다고 했었죠? 이건 그냥 어떤 문자의 집합을 조금 편하게 표현하려고 캐릭터 클래스나 캐릭터 셋 같은 녀석들을 쓰는 거였잖아요? </p>\n<p>아무 글자나 상관없다는 굉장히 추상적인 조건을 <code class=\"language-text\">.</code> 캐릭터 클래스 같은 걸로 표현하고, 캐릭터셋으로 나만의 집합을 정의해서 한글 11,172자를 일일히 다 입력하지 않아도 되게 만들어주고 뭐 그런 용도 잖아요.</p>\n<p>수량자도 마찬가지입니다.</p>\n<p>결국 수량자는 이런 식으로 사용이 되는데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/.{2,3}/</span>\n<span class=\"token regex\">/.+/</span>\n<span class=\"token regex\">/.?/</span>\n<span class=\"token regex\">/.*/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>자 여기서 저 <code class=\"language-text\">.</code> 캐릭터 클래스 뒤 쪽에 붙은 녀석들이 전부 수량자입니다. 이것들이 각각 뭘 의미하는지는 이후 강의에서 다시 설명할 예정이니까 지금은 그냥 “아 이런 느낌으로 사용하는구나” 정도만 알고 넘어가시면 돼요.</p>\n<p>수량자는 결국 어떤 표현, 그러니까 캐릭터 클래스든 아니면 내가 직접 <code class=\"language-text\">hello</code> 같은 문자를 입력해서 만든 패턴이든 뭐든 간에 수량자 앞 쪽에 오는 표현이 몇 번 등장했나를 의미합니다.</p>\n<p>이게 말로 하면 잘 이해가 안 될 수 있으니까 그냥 직접 보도록 할게요.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token string\">'aksfjkasjlfkjaslkfjiqjowifjqwlkfjqwkljfqwlkjfklqjw'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>자 이런 문자열이 있어요. (그냥 막 침) 참고로 제가 치는 속도를 보면 아셨겠지만, 이 문자열은 그냥 아무 의미 없습니다. 그냥 막 친 거에요.</p>\n<p>우리 이전에 캐릭터 클래스를 공부할 때 이런 정규식 사용했었죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/..../g</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이게 뭐였죠? 어떤 문자도 상관없으니 4번 등장하는 패턴을 찾겠다. 라는 의미였잖아요. 여기 결과를 보면 패턴 매칭이 이런 식으로 4글자씩 구분되어있는 것을 볼 수 있죠?</p>\n<p>자 근데, 이게 4개가 아니라 20개면 어떨까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/..................../g</span> </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이렇게 해야겠죠? 아직까지는 할 만 한 것 같아요. 근데 이게 200개면 어떻게 될까요?</p>\n<p>손절해야죠? 이건 못 합니다. 할 수는 있겠지만 아마 코드 리뷰 받을 때 동료한테 뺨 맞지않을까요? 정규식이랍시고 쩜만 200개 찍어놓으면 당연히 곱게 안 보이겠죠?</p>\n<p>자 여기서 수량자가 등장합니다.</p>\n<p>일단 첫 번째, 수량자는 이런 패턴이 등장하는 횟수를 명시적으로 표현할수 있게 해줍니다. 이렇게요.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/.{4}/g</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이 브라켓, 중괄호 안에 들어가 있는 숫자는 <code class=\"language-text\">.</code> 캐릭터 클래스가 4번 등장한 패턴을 찾겠다는 거에요. 그러면 이제 200개든 2000개든 문제가 없죠? 수량자에 넘기는 숫자만 바꿔주면 되니까요.</p>\n<p>그리고 두 번째, 이런 경우도 있을 수 있어요. 예를 들어 우리가 임의의 문자열 속에서 특정 HTML 태그가 시작하는 부분과 끝나는 부분을 찾아낸다고 생각해볼게요.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token string\">'&lt;p>Hello Regex!&lt;/p>'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>HTML 태그를 찾는 방법은 지금 우리가 배운 것들로는 아무래도 구현이 조금 어려울 수 있기 떄문에, 여기서는 그냥 p태그를 찾는 것이라고 가정하고 진행을 할게요.</p>\n<p>자, HTML 문법 상에서 p 태그가 시작하는 부분은 <code class=\"language-text\">&lt;p&gt;</code>이구요. 끝나는 부분은 <code class=\"language-text\">&lt;/p&gt;</code> 이 부분이죠? 자 이 정보의 패턴을 정규식으로 표현해보면 이런 느낌이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/&lt;p>&lt;\\/p>/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>그리고 이 태그 중간에 문자들이 막 들어가겠죠? 근데 문제는 이 p태그 안에 문자가 얼마나 들어갈지 정해진 게 없잖아요? 심지어 없을 수도 있잖아요? 그냥 빈 태그일수도 있죠?</p>\n<p>그래서 이렇게 </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/&lt;p>.*&lt;\\/p>/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>캐릭터 클래스와 수량자를 조합해서 이런 상황을 해결할 수 있습니다.</p>\n<p>일단 중간에 있는 <code class=\"language-text\">.</code> 캐릭터 클래스가 의미하는게 뭐였죠? 아무 문자나 상관없다. p 태그안에 뭐가 들어가든 제약이 없잖아요? 그리고 이 뒤에 붙은 <code class=\"language-text\">*</code> 수량자, 이게 바로 0번 또는 그 이상을 의미하는 수량자입니다.</p>\n<p>아까 뭐라고 그랬죠? 수량자는 자기 앞에 위치한 패턴이 몇 번 등장했는지를 의미하는 녀석이라고 했잖아요?</p>\n<p>즉, <code class=\"language-text\">.</code> 캐릭터 클래스가 0번. 그러니까 등장하지 않거나, 혹은 그 이상. 등장하거나. 즉, 문자가 있거나 없거나를 의미하는 겁니다.</p>\n<p>수량자가 없으면 이런 표현을 할 수가 없어요. 아까 저희 수량자 없이 정규식 작성하려고 할때 막막했잖아요?</p>\n<p>자, 그 외에도 저희가 비밀번호 만들 때 “같은 문자가 n번 이상 반복 안 된다” 같은 금지 룰을 만들죠? 이런 문제도 결국 어떤 문자열 안에서 같은 문자가 n번 반복되는지를 찾아야하기 때문에 수량자를 사용하면 해결할 수 있습니다.</p>\n<p>그리고 많은 분이 또 헷갈려 하시는게, 여기 이 정규식을 보면</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/&lt;p>.*&lt;\\/p>/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>도대체 어디서 어디까지가 횟수를 셀 패턴으로 인식이 되느냐. 왜냐면 보통 수량자를 알려줄 때 그냥 횟수를 세고 싶은 패턴이 나오는 거라고만 얘기를 해요.</p>\n<p>근데, 이게 되게 헷갈리는 말인게, 저 별, 스타 수량자 앞에는 <code class=\"language-text\">.</code> 캐릭터 클래스만 있는게 아니잖아요? 저 앞에 p 태그 오프닝 태그 패턴도 수량자 앞에 있으니까요.</p>\n<p>자 여기서 중요한 거, 수량자는 반드시 자기 바로 앞에 있는 패턴에만 해당됩니다. 여기서 바로 앞에 있는 패턴이라고 하면 저 <code class=\"language-text\">.</code> 캐릭터 클래스겠죠?</p>\n<p>자 그러면 이렇게 하면 어떻게 될까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/&lt;p>.[a-z]*&lt;\\/p>/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이때는 수량자앞에 위치한 패턴이 저 캐릭터셋으로 바뀌었죠? 그럼 이제 이 스타 수량자는 캐릭터셋의 횟수를 세는 겁니다.</p>\n<p>자 그럼 이런 경우도 있어요. 아직 우리가 배우진 않았지만 이렇게 문자들의 그룹을 만들 수도 있거든요?</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token regex\">/&lt;p>.(http)*&lt;\\/p>/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이때는 당연히 그룹핑된 저 (http) 까지가 하나의 패턴인거고, 수량자도 얘한테만 적용이 되겠죠? 저 앞에 있는 <code class=\"language-text\">.</code> 캐릭터 클래스는 수량자의 타겟이 아닙니다.</p>\n<p>이게 말로만 들으면 헷갈릴 수 있는데 regexr 사이트에서 수량자의 타겟이 무엇인지를 시각화해서 잘 보여줘요. 수량자에 커서를 올리면 어떤 패턴까지가 수량자의 타겟인지 이렇게 박스로 잡아서 보여줍니다.</p>\n<p>(수량자 위에 커서 올리면 타겟까지 보여주는 거 시범)</p>\n<p>자 이렇게 수량자가 어떤 패턴을 타겟으로 하고 있냐를 정확히 아셔야 여러분이 원하는 패턴의 수량을 정확히 셀 수 있겠죠? 헷갈리시면 방금 제가 했던 것처럼 regexr 사이트에서 계속 해보세요. 이것저것 써보면서. 다른 사람이 이렇게 말로 백번 설명하는 것보다 직접 한번 해보는 게 제일 이해가 잘 됩니다.</p>\n<p>자, 이제 여기까지 수량자의 간단한 소개를 해드렸구요. 다음 강의부터는 이 수량자라는 친구들을 조금 더 자세히 하나하나 뜯어보는 시간을 가져보도록 하겠습니다.</p>","tableOfContents":"","fields":{"slug":"lecture.regex-tutorial.section3.1","lecture":"regex-tutorial","category":"content"},"frontmatter":{"title":"수량자란 무엇인가요?"}}},"pageContext":{"slug":"lecture.regex-tutorial.section3.1","previous":{"fields":{"slug":"lecture.regex-tutorial.section3.3","path":"/lectures/regex-tutorial/section3/3/"}},"next":{"fields":{"slug":"lecture.regex-tutorial.section2.8","path":"/lectures/regex-tutorial/section2/8/"}}}}}