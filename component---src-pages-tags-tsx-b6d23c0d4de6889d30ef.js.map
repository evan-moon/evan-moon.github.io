{"version":3,"sources":["webpack:///./src/components/Cards/Widgets/RecentPosts.tsx","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/components/Cards/Widgets/index.tsx","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///./src/components/Cards/Widgets/Tags.tsx","webpack:///./src/hooks/useAllTags.ts","webpack:///./src/containers/TagsPage/index.tsx","webpack:///./src/pages/tags.tsx"],"names":["useStyles","makeStyles","wrapper","margin","padding","RecentPostsCard","onClick","styles","posts","useAllPosts","recent","useMemo","splice","handleRecentPostClick","useCallback","path","title","className","map","post","index","key","fields","thumbnail","frontmatter","childImageSharp","fixed","src","date","categories","props","ref","action","avatar","classes","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","Typography","variant","display","color","root","content","withStyles","alignItems","flex","marginRight","alignSelf","marginTop","name","WidgetCard","children","Card","CardContent","createSvgIcon","d","alt","childrenProp","imgProps","sizes","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","theme","position","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","backgroundColor","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","spacing","nonDecorationText","textDecoration","chip","caption","marginBottom","TagsCard","lang","tags","allMarkdownRemark","group","filter","nodes","length","fieldValue","totalCount","sort","a","b","getTagPath","usePageRouteUtils","to","Chip","size","label","logger","generateLogger","click","handleTagClick","tagName","TagsPage","useEffect","view","Layout","right","RecentPosts","SEO","Tags"],"mappings":"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","file":"component---src-pages-tags-tsx-b6d23c0d4de6889d30ef.js","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport WidgetCard from 'components/Cards/Widgets';\nimport { makeStyles } from '@material-ui/core';\nimport { useAllPosts } from 'hooks/useAllPosts';\n\nconst MAX_POST_COUNT = 5;\nconst useStyles = makeStyles({\n  wrapper: {\n    margin: 0,\n    padding: 0,\n  },\n});\n\ninterface Props {\n  onClick?: (path: string) => void;\n}\nconst RecentPostsCard = ({ onClick }: Props) => {\n  const styles = useStyles();\n  const posts = useAllPosts();\n\n  const recent = useMemo(() => {\n    return posts.splice(0, MAX_POST_COUNT);\n  }, [posts]);\n\n  const handleRecentPostClick = useCallback(\n    (path: string) => {\n      onClick?.(path);\n    },\n    [onClick]\n  );\n\n  return (\n    <WidgetCard title=\"최근 글\">\n      <ul className={styles.wrapper}>\n        {recent.map((post, index) => (\n          <SimplePostItem\n            key={post.fields.path ?? index}\n            thumbnail={post.frontmatter.thumbnail?.childImageSharp?.fixed?.src ?? ''}\n            title={post.frontmatter.title ?? ''}\n            date={post.frontmatter.date}\n            path={post.fields.path ?? '/'}\n            categories={post.frontmatter.categories}\n            onClick={() => handleRecentPostClick(post.fields.path)}\n          />\n        ))}\n      </ul>\n    </WidgetCard>\n  );\n};\n\nexport default RecentPostsCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { ReactNode } from 'react';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\ninterface Props {\n  title?: string;\n  children: ReactNode;\n}\nconst WidgetCard = ({ title = '', children }: Props) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport default WidgetCard;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background[\"default\"],\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport WidgetCard from 'components/Cards/Widgets';\nimport { Link } from 'gatsby';\nimport { Chip, Avatar, makeStyles, Theme } from '@material-ui/core';\nimport { useAllTags } from 'hooks/useAllTags';\nimport { usePageRouteUtils } from 'hooks/usePageRouteUtils';\n\nconst useStyles = makeStyles<Theme>(({ spacing, typography }) => ({\n  nonDecorationText: {\n    textDecoration: 'none',\n  },\n  chip: {\n    fontSize: typography.caption.fontSize,\n    marginRight: spacing(1),\n    marginBottom: spacing(1),\n  },\n}));\n\ninterface Props {\n  onClick?: (tag: string) => void;\n}\nconst TagsCard = ({ onClick }: Props) => {\n  const styles = useStyles();\n  const tags = useAllTags();\n  const { getTagPath } = usePageRouteUtils();\n\n  return (\n    <WidgetCard title=\"태그\">\n      {tags.map(({ fieldValue, totalCount }) => (\n        <Link key={fieldValue} to={getTagPath(fieldValue)} className={styles.nonDecorationText}>\n          <Chip\n            className={styles.chip}\n            size=\"small\"\n            label={fieldValue}\n            avatar={<Avatar>{totalCount}</Avatar>}\n            onClick={() => onClick?.(fieldValue)}\n          />\n        </Link>\n      ))}\n    </WidgetCard>\n  );\n};\n\nexport default TagsCard;\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { GroupItem } from 'models/post';\nimport { SupportedLanguages } from 'models/site';\n\ninterface TagsQueryResult {\n  allMarkdownRemark: {\n    group: Array<GroupItem<{ fields: { lang: SupportedLanguages } }>>;\n  };\n}\nexport const useAllTags = (lang: SupportedLanguages = 'ko') => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery<TagsQueryResult>(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n          nodes {\n            fields {\n              lang\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const currentLanguageTags = group.filter(\n    ({ nodes }) => nodes.filter(({ fields }) => fields.lang === lang).length > 0\n  );\n\n  return currentLanguageTags\n    .map(({ fieldValue, totalCount }) => ({ fieldValue, totalCount }))\n    .sort((a, b) => b.totalCount - a.totalCount);\n};\n","import React, { useEffect } from 'react';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport TagsCard from 'components/Cards/Widgets/Tags';\nimport RecentPostsCard from 'components/Cards/Widgets/RecentPosts';\nimport { generateLogger } from 'utils/loggers';\n\nconst logger = generateLogger('tags_page');\nconst handleRecentPostClick = (path: string) => {\n  logger.click('click_recent_posting', { path });\n};\nconst handleTagClick = (tagName: string) => {\n  logger.click('click_tag', { tagName });\n};\n\nconst TagsPage = () => {\n  useEffect(() => {\n    logger.view();\n  }, []);\n\n  return (\n    <Layout right={<RecentPostsCard onClick={handleRecentPostClick} />}>\n      <SEO title=\"태그\" />\n      <TagsCard onClick={handleTagClick} />\n    </Layout>\n  );\n};\n\nexport default TagsPage;\n","import React from 'react';\nimport Page from 'containers/TagsPage';\nexport default () => <Page />;\n"],"sourceRoot":""}