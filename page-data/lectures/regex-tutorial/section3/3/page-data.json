{"componentChunkName":"component---src-templates-lecture-page-template-tsx","path":"/lectures/regex-tutorial/section3/3/","result":{"data":{"markdownRemark":{"id":"0cf11509-2466-5f87-aac3-1b946b7e8b68","excerpt":"이번 강의에서는 패턴이 반복하는 횟수를 명확히 명시하는 것이 아니라 n번 이상과 같이 조금 더 추상적인 조건을 표현할 수 있는 수량자들에 대해서 알아볼 건데요. 자, 이 수량자들의 특징은 이 패턴이 나오거나 혹은 나오지 않거나, 혹은 여러 번 등장하…","html":"<p>이번 강의에서는 패턴이 반복하는 횟수를 명확히 명시하는 것이 아니라 n번 이상과 같이 조금 더 추상적인 조건을 표현할 수 있는 수량자들에 대해서 알아볼 건데요.</p>\n<p>자, 이 수량자들의 특징은 이 패턴이 나오거나 혹은 나오지 않거나, 혹은 여러 번 등장하거나 이런 추상적인 표현들을 할 수 있다는 거에요. 그냥 반복되는 횟수를 명시하면 되는데, 이런 친구들이 굳이 필요한 걸까요?</p>\n<p>네 필요합니다. 저희가 앞서 배웠던 캐릭터 클래스를 사용하는 이유와 동일해요. 우리가 정규식에 명시적으로 원하는 문자를 입력해서 패턴을 표현할 수도 있었지만, 이게 어려운 경우도 있었잖아요? 모든 문자를 의미하는 <code class=\"language-text\">.</code> 캐릭터 클래스 기억하시죠? 이걸 명시적으로 모든 문자를 다 입력할 수는 없는 거잖아요?</p>\n<p>추상적인 표현을 할 수 있는 수량자도 마찬가지입니다. 물론 앞서 배운 것처럼 명시적으로 반복 횟수를 입력할 수도 있지만, 그게 안 되는 표현도 있어요.</p>\n<p>예를 들면 “이 패턴이 등장할 수도 있고 안 할 수도 있다.” 혹은 “n번 이상”, n번이 아니라 n번 이상입니다. 그 말인즉슨 n만 넘기면 몇 번을 등장해도 상관없다는 거죠? 이런 경우들은 명시적으로 횟수를 표현하는 방법으로는 해결할 수가 없습니다. n번 이상을 어떻게 명시적으로 횟수를 적어서 표현을 해요. 불가능하겠죠?</p>\n<p>자, 그럼 이제 이런 추상적인 표현을 할 수 있는 수량자들을 하나씩 살펴볼건데요. 이 추상 수량자들은 총 3개가 있습니다. 자 이제 하나씩 살펴보도록 할게요.</p>\n<h3 id=\"옵셔널-수량자\" style=\"position:relative;\">옵셔널 수량자<a href=\"#%EC%98%B5%EC%85%94%EB%84%90-%EC%88%98%EB%9F%89%EC%9E%90\" aria-label=\"옵셔널 수량자 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>첫 번째로 옵셔널 수량자. 이 녀석은 이름 그래도 옵셔널한 패턴을 표현하는거에요. 옵셔널이라는게 뭐죠?</p>\n<p>옵셔널이라는 건 있을 수도 있고 없을 수도 있다는 의미죠. 결국 이 녀석은 내 앞에 등장하는 패턴이 있을 수도 있고 없을 수도 있다는 의미입니다.</p>\n<p>옵셔널 수량자도 결국 수량자기 때문에 저희가 이전 강의에서 배웠던 수량자와 동일하게, 횟수를 세고 싶은 패턴 뒤쪽에 위치시켜주면 됩니다. 이렇게요.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token regex\">/.?/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>여기서 이 물음표가 옵셔널 수량자에요. 다른 수량자들과 마찬가지로 옵셔널 수량자 앞에 있는 표현이 0번 등장하거나, 혹은 1번 등장하거나를 의미합니다. 즉, 있거나 없거나죠? 근데 주의해야할 점은 등장 횟수가 무조건 0번 아니면 1번이에요. 예를 들어서 2번 등장했다. 이러면 이 패턴에는 걸리지 않습니다. 무조건 0번 아니면 1번이에요.</p>\n<p>그럼 이 까다로운 녀석을 어떤 상황에서 쓸 수 있을까요? 자, 저희가 저번 수량자 강의에서 예시로 들었던 핸드폰번호 패턴을 의미하는 정규식 표현을 가져와서 조금 개조해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token regex\">/^01[0|1|6|8|9]-\\d{3,4}-\\d{4}$/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>자 이게 저번 강의에서 수량자를 배우면서 예시로 만들어보았던 핸드폰 번호를 의미하는 패턴이었죠? 핸드폰 번호는 맨 앞 필드에는 010, 011, 016 같은 통신사 식별번호, 그리고 두 번째 필드는 3자리에서 4자리 사이의 숫자, 그리고 마지막 필드는 4자리의 숫자가 들어가는 패턴을 보이는 정보입니다.</p>\n<p>자 근데 만약에 이 정규식 표현으로 </p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token string\">'01011111111'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이런 문자열을 매칭해서 테스트하면 어떻게 될까요? 보시는 바와 같이 잡히는 부분이 전혀 없죠? 왜 그럴까요?</p>\n<p>지금 이 패턴은 무조건 문자열 안에 대시(-)가 존재할 것을 가정하고 있어요. 여기 중간에 대시가 있잖아요? 근데 우리는 </p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token string\">'010-1111-1111'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이런 문자열도 핸드폰 번호라고 볼 수 있지만</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token string\">'01011111111'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이것도 핸드폰 번호라고 볼 수 있잖아요? 즉, 핸드폰 번호라는 정보에는 대시가 있을 수도 있고, 없을 수도 있다는 겁니다. 자, 그러면 결국 대시가 이 필드들 사이사이에 0번 등장하거나 즉, 없거나, 혹은 1번 등장하겠죠?</p>\n<p>그러면 이 패턴 안에 있는 대시에 옵셔널 수량자를 사용해서 이렇게 바꿔볼 수 있을 것 같아요.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token regex\">/^01[0|1|6|8|9]-?\\d{3,4}-?\\d{4}$/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>대시 뒤에 옵셔널 수량자를 붙혀주면 문자열 내에 대시가 있든 없든 전부 매칭이 되는 모습을 볼 수가 있죠? 하지만, 이렇게 </p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token string\">'010--1111-1111'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>대시가 두 번 연속으로 들어가는 경우는 또 배제해야해요. 왜냐, 당연히 핸드폰 번호에는 이 필드 구분자, 즉, 대시가 두 번 연속으로 들어가는 경우가 없으니까요.</p>\n<p>이런 경우가 어떤 패턴이 0번 혹은 1번만 등장해야하는 경우입니다. 어떤 상황인지 이해가 되시죠? 이게 특이한 케이스가 아닌게, 이렇게 핸드폰 번호같이 어떤 필드 구분자를 가지고 있는 애들은 대부분 필드 구분자가 문자열 내에 이렇게 1번 나오거나 아니면 없는 경우가 대부분이에요. 주민등록번호도 보면, 가운데 대시로 필드 구분하잖아요? 근데 이 대시가 두 번 연속 등장하면 이상하죠?</p>\n<p>카드번호도 마찬가지구요.</p>\n<p>자, 그래서 이 옵셔널 수량자는 보통 이런 정보들을 판별할 때 가장 많이 쓰입니다.</p>\n<p>그리고 여기서 뜬금없이 옵셔널이라는 것을 표현할 때 물음표라는 기호가 등장해서 조금 의아하실 수도 있는데, 여기서 한 가지 팁…이라기보다 정보를 드리자면.</p>\n<p>모던 프로그래밍 언어에서 옵셔널이라는 것을 표현할 때 일반적으로 물음표를 많이 씁니다.</p>\n<p>뭐 대충 이런 문법이죠? 함수의 인자가 있을 수도 있고 없을 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>그리고 이게 타입스크립트나 자바스크립트만의 특별한 문법은 아니고 C#도 쓰고 Swift도 쓰고 코틀린도 쓰고 스칼라도 쓰고 파이썬도 아직은 아니지만 제안은 되어있습니다. 이렇게 옵셔널이라는 개념과 물음표를 연관지은 문법을 사용하는 언어가 생각보다 많아요. 정규식도 마찬가지입니다.</p>\n<p>그래서 무조건 옵셔널 수량자는 물음표다. 라고 외우시는 것보다는 전반적으로 모던 프로그래밍 환경에서 옵셔널이라는 개념을 물음표로 표현하는 경우가 많다는 걸 알고 가시면 조금 더 도움이 되실 거라고 생각해요.</p>\n<p>자, 그럼 다음 수량자를 볼까요?</p>\n<h3 id=\"스타-수량자\" style=\"position:relative;\">스타 수량자<a href=\"#%EC%8A%A4%ED%83%80-%EC%88%98%EB%9F%89%EC%9E%90\" aria-label=\"스타 수량자 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>다음 수량자는 0번 이상을 표현하는 Star 수량자입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token regex\">/.*/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이 표현도 방금 전의 옵셔널 수량자와 동일하게 이 수량자 앞에 등장하는 패턴이 없거나, 혹은 있거나를 의미합니다. 왜냐면 0번 이상이라는 건 0번도 허용한다는 걸 의미하니까요.</p>\n<p>하지만 차이점은.</p>\n<p>옵셔널 수량자는 0번, 그러니까 없거나, 혹은 무조건 1번 등장하는 패턴을 의미하는 거였죠?</p>\n<p>하지만 스타 수량자는 0번, 혹은 그냥 그 이상입니다. 1번이든 2번이든 100번이든 상관없다 이거에요.</p>\n<p>자 한번 직접 비교를 해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token regex\">/^01[0|1|6|8|9]-*\\d{3,4}-?\\d{4}$/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>방금 저희가 옵셔널 수량자를 알아볼 때 썼던 이 패턴을 재활용해서 한번 이 두 수량자가 어떤 차이를 가지고 있는지 직접 보도록 할게요.</p>\n<p>이 패턴에서 앞 쪽에 위치한 필드 구분자인 대시에는 스타 수량자를 사용했고, 뒤 쪽에 위치한 필드 구분자인 대시에는 아까와 마찬가지로 옵셔널 수량자를 사용했습니다.</p>\n<p>그래서 앞쪽에 위치한 대시는 제가 몇개를 연속으로 추가하든 전부 패턴 매칭이 되는 걸 볼 수가 있죠? 심지어 없애도 문제없이 패턴 매칭이 되는 모습을 볼 수 있습니다.</p>\n<p>하지만, 뒤 쪽에 위치한 대시는 제가 하나라도 더 추가하면 패턴 매칭이 되지 않습니다. 옵셔널 수량자는 0번 또는 1번만 인정하는 수량자이니까요.</p>\n<p>이 차이점이 이제 이해가 되시죠? 자 그러면 이 스타 수량자는 어떤 유형의 정보에 사용을 하게 될까요? 대표적으로 HTML 태그 같은 게 있습니다.</p>\n<p>자, 예를 들어 우리가 만약에 어떤 HTML 파일을 까서 그 안에 있는 p 태그만 전부 걸러내고 싶다고 생각해봅시다. 뭐 p 태그는 이런 식으로 생겼겠죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>근데 문제는 저 오프닝 태그랑 클로징 태그가 연속해서 나오는 경우도 있겠지만, 대부분은 안에 내용이 있을 거란 말이죠. 이렇게요.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>하이하이 나는 에반<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>자 근데, 저 안에 내용이 있냐 없냐는 저희한테 중요한게 아니죠? 저희는 내용이 있는 p태그, 혹은 내용이 없는 p태그를 찾고 싶은게 아니라 그냥 내용이 있든 없든 상관없이 p태그를 찾고 싶은 거 잖아요?</p>\n<p>이럴 때 스타 수량자가 쓰이는 겁니다. 있든 없는 상관없는 정보가 껴있을 때. 즉, 내가 고의적으로 무시하고 싶은 정보가 중간에 껴있을 때.</p>","tableOfContents":"<ul>\n<li><a href=\"#%EC%98%B5%EC%85%94%EB%84%90-%EC%88%98%EB%9F%89%EC%9E%90\">옵셔널 수량자</a></li>\n<li><a href=\"#%EC%8A%A4%ED%83%80-%EC%88%98%EB%9F%89%EC%9E%90\">스타 수량자</a></li>\n</ul>","fields":{"slug":"lecture.regex-tutorial.section3.3","lecture":"regex-tutorial","category":"content"},"frontmatter":{"title":"n번 등장하는 패턴 찾기"}}},"pageContext":{"slug":"lecture.regex-tutorial.section3.3","previous":{"fields":{"slug":"lecture.regex-tutorial.section5.2","path":"/lectures/regex-tutorial/section5/2/"}},"next":{"fields":{"slug":"lecture.regex-tutorial.section3.1","path":"/lectures/regex-tutorial/section3/1/"}}}}}