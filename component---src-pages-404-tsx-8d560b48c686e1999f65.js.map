{"version":3,"sources":["webpack:///./src/components/Cards/Widgets/RecentPosts.tsx","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/components/Cards/Widgets/index.tsx","webpack:///./src/containers/ErrorPage/index.tsx","webpack:///./src/pages/404.tsx"],"names":["useStyles","makeStyles","wrapper","margin","padding","RecentPostsCard","onClick","styles","lang","useRecoilState","languageAtom","posts","useAllPosts","recent","useMemo","splice","handleRecentPostClick","useCallback","title","className","map","post","index","key","fields","path","thumbnail","frontmatter","childImageSharp","fixed","src","date","categories","props","ref","action","avatar","classes","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","Typography","variant","display","color","root","content","withStyles","alignItems","flex","marginRight","alignSelf","marginTop","name","WidgetCard","children","Card","CardContent","logger","generateLogger","click","handleMainButtonClick","spacing","typography","palette","status","textAlign","fontWeight","letterSpacing","h1","centerStatusText","primary","main","textAlignCenter","postCardWrapper","postCard","maxWidth","goBackButtonWrapper","link","textDecoration","ErrorPage","useEffect","state","Layout","SEO","Box","role","aria-label","justifyContent","flexDirection","gutterBottom","RecentPosts","to","Button","size"],"mappings":"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","file":"component---src-pages-404-tsx-8d560b48c686e1999f65.js","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport WidgetCard from 'components/Cards/Widgets';\nimport { makeStyles } from '@material-ui/core';\nimport { useRecoilState } from 'recoil';\nimport { languageAtom } from 'atoms/language';\nimport { useAllPosts } from 'hooks/useAllPosts';\n\nconst MAX_POST_COUNT = 5;\nconst useStyles = makeStyles({\n  wrapper: {\n    margin: 0,\n    padding: 0,\n  },\n});\n\ninterface Props {\n  onClick?: () => void;\n}\nconst RecentPostsCard = ({ onClick }: Props) => {\n  const styles = useStyles();\n  const [lang] = useRecoilState(languageAtom);\n  const posts = useAllPosts(lang);\n\n  const recent = useMemo(() => {\n    return posts.splice(0, MAX_POST_COUNT);\n  }, [posts]);\n\n  const handleRecentPostClick = useCallback(() => {\n    onClick?.();\n  }, [onClick]);\n\n  return (\n    <WidgetCard title=\"최근 글\">\n      <ul className={styles.wrapper}>\n        {recent.map((post, index) => (\n          <SimplePostItem\n            key={post.fields.path ?? index}\n            thumbnail={post.frontmatter.thumbnail?.childImageSharp?.fixed?.src ?? ''}\n            title={post.frontmatter.title ?? ''}\n            date={post.frontmatter.date}\n            path={post.fields.path ?? '/'}\n            categories={post.frontmatter.categories}\n            onClick={handleRecentPostClick}\n          />\n        ))}\n      </ul>\n    </WidgetCard>\n  );\n};\n\nexport default RecentPostsCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { ReactNode } from 'react';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\ninterface Props {\n  title?: string;\n  children: ReactNode;\n}\nconst WidgetCard = ({ title = '', children }: Props) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport default WidgetCard;\n","import React, { useEffect } from 'react';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport { Typography, Box, makeStyles, Button, Theme } from '@material-ui/core';\nimport RecentPostsCard from 'components/Cards/Widgets/RecentPosts';\nimport { Link } from 'gatsby';\nimport { generateLogger } from 'utils/loggers';\n\nconst logger = generateLogger('에러 페이지');\nconst handleRecentPostClick = () => {\n  logger.click('최근 포스팅 링크');\n};\nconst handleMainButtonClick = () => {\n  logger.click('홈 버튼');\n};\n\nconst useStyles = makeStyles<Theme>(({ spacing, typography, palette }) => ({\n  status: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    letterSpacing: typography.h1.letterSpacing,\n  },\n  centerStatusText: {\n    color: palette.primary.main,\n  },\n  textAlignCenter: {\n    textAlign: 'center',\n  },\n  postCardWrapper: {\n    marginTop: spacing(8),\n  },\n  postCard: {\n    maxWidth: '500px',\n    margin: '0 auto',\n  },\n  goBackButtonWrapper: {\n    marginTop: spacing(8),\n  },\n  link: {\n    textDecoration: 'none',\n  },\n}));\n\nconst ErrorPage = () => {\n  const styles = useStyles();\n\n  useEffect(() => {\n    logger.state();\n  }, []);\n\n  return (\n    <Layout>\n      <SEO title=\"404: Not Found\" />\n      <Box>\n        <Typography className={styles.status} variant=\"h1\">\n          4<span className={styles.centerStatusText}>0</span>4\n        </Typography>\n        <Typography className={styles.textAlignCenter} variant=\"h4\" component=\"h2\">\n          길을 잃어버리셨어요!{' '}\n          <span role=\"img\" aria-label=\"아뿔싸\">\n            🤦‍♂️\n          </span>\n        </Typography>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" className={styles.postCardWrapper}>\n        <Typography className={styles.textAlignCenter} variant=\"subtitle2\" gutterBottom>\n          혹시 이런 포스트를 찾으시나요?\n        </Typography>\n        <Box className={styles.postCard}>\n          <RecentPostsCard onClick={handleRecentPostClick} />\n        </Box>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" className={styles.goBackButtonWrapper}>\n        <Link to=\"/\" className={styles.link}>\n          <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleMainButtonClick}>\n            메인으로\n          </Button>\n        </Link>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport Page from 'containers/ErrorPage';\nexport default () => <Page />;\n"],"sourceRoot":""}