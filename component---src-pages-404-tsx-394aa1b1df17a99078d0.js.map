{"version":3,"sources":["webpack:///./src/components/SimplePostItem.tsx","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/components/cards/widgets/index.tsx","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./src/components/cards/widgets/PopularPosts.tsx","webpack:///./src/hooks/usePopularPosts.tsx","webpack:///./src/containers/ErrorPage/index.tsx","webpack:///./src/pages/404.tsx","webpack:///./src/components/utils/Emoji.tsx"],"names":["useStyles","makeStyles","shape","palette","link","color","textDecoration","item","borderRadius","transition","backgroundColor","grey","thumbnail","width","height","margin","SimplePostItem","title","path","date","categories","onClick","styles","category","useMemo","join","to","className","container","spacing","xs","src","alt","gutterBottom","variant","props","ref","action","avatar","classes","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","Typography","display","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","WidgetCard","children","Card","CardContent","Button","_props$color","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","_props$variant","concat","colorInherit","focusRipple","focusVisible","label","theme","typography","button","boxSizing","minWidth","text","primary","transitions","create","duration","hoverOpacity","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","wrapper","PopularPostsCard","allPosts","popularPostSlugs","posts","useAllPosts","useRecoilState","popularPostsAtom","map","slug","find","p","fields","filter","v","recent","splice","handlePostClick","useCallback","post","index","key","frontmatter","childImageSharp","fixed","logger","generateLogger","click","handleMainButtonClick","breakpoints","image","marginBottom","up","textAlignCenter","textAlign","postCardWrapper","postCard","maxWidth","goBackButtonWrapper","ErrorPage","errorImage","useEffect","view","Layout","SEO","Box","flexDirection","fluid","Emoji","emoji","PopularPosts","role","aria-label"],"mappings":"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","file":"component---src-pages-404-tsx-394aa1b1df17a99078d0.js","sourcesContent":["import React, { useMemo } from 'react';\nimport { Grid, Typography, makeStyles, Theme } from '@material-ui/core';\nimport { Link, graphql } from 'gatsby';\n\nconst useStyles = makeStyles<Theme>(({ shape, palette }) => ({\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  item: {\n    borderRadius: shape.borderRadius,\n    transition: 'background-color 0.3s ease-in-out',\n    '&:hover': {\n      backgroundColor: palette.grey['100'],\n    },\n  },\n  thumbnail: {\n    width: 64,\n    height: 64,\n    margin: 0,\n    borderRadius: shape.borderRadius,\n  },\n}));\n\ninterface Props {\n  thumbnail: string;\n  title: string;\n  path: string;\n  date?: string;\n  categories?: string[];\n  onClick?: (path: string) => void;\n}\nconst SimplePostItem = ({ thumbnail, title, path, date = '', categories = [], onClick }: Props) => {\n  const styles = useStyles();\n  const category = useMemo(() => {\n    if (categories != null) {\n      return categories.join('/');\n    } else {\n      return '';\n    }\n  }, [categories]);\n  return (\n    <Link to={path} className={styles.link}>\n      <Grid container spacing={2} onClick={() => onClick?.(path)} className={styles.item}>\n        <Grid item xs=\"auto\">\n          <img src={thumbnail} alt={title} title={title} className={styles.thumbnail} />\n        </Grid>\n        <Grid item xs={true}>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"caption\">\n            {date}\n          </Typography>\n          <Typography variant=\"body2\">{title}</Typography>\n          <Typography color=\"textSecondary\" variant=\"caption\">\n            {category}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Link>\n  );\n};\n\nexport default SimplePostItem;\n\nexport const query = graphql`\n  fragment SimplePostItemQuery on MarkdownRemark {\n    fields {\n      path\n      lang\n    }\n    frontmatter {\n      title\n      categories\n      date(formatString: \"YYYY-MM-DD\")\n      thumbnail {\n        childImageSharp {\n          fixed(width: 320, height: 320, quality: 100, cropFocus: CENTER) {\n            src\n          }\n        }\n      }\n    }\n  }\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { ReactNode } from 'react';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\ninterface Props {\n  title?: string;\n  children: ReactNode;\n}\nconst WidgetCard = ({ title = '', children }: Props) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport default WidgetCard;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React, { useCallback, useMemo } from 'react';\nimport SimplePostItem from 'src/components/SimplePostItem';\nimport WidgetCard from 'components/cards/widgets';\nimport { makeStyles } from '@material-ui/core';\nimport { usePopularPosts } from 'src/hooks/usePopularPosts';\n\nconst MAX_POST_COUNT = 5;\nconst useStyles = makeStyles({\n  wrapper: {\n    margin: 0,\n    padding: 0,\n  },\n});\n\ninterface Props {\n  onClick?: (path: string) => void;\n}\nconst PopularPostsCard = ({ onClick }: Props) => {\n  const styles = useStyles();\n  const posts = usePopularPosts();\n\n  const recent = useMemo(() => {\n    return posts.splice(0, MAX_POST_COUNT);\n  }, [posts]);\n\n  const handlePostClick = useCallback(\n    (path: string) => {\n      onClick?.(path);\n    },\n    [onClick]\n  );\n\n  return (\n    <WidgetCard title=\"많이 읽는 포스팅\">\n      <ul className={styles.wrapper}>\n        {recent.map((post, index) => (\n          <SimplePostItem\n            key={post.fields.path ?? index}\n            thumbnail={post.frontmatter.thumbnail?.childImageSharp?.fixed?.src ?? ''}\n            title={post.frontmatter.title ?? ''}\n            date={post.frontmatter.date}\n            path={post.fields.path ?? '/'}\n            categories={post.frontmatter.categories}\n            onClick={() => handlePostClick(post.fields.path)}\n          />\n        ))}\n      </ul>\n    </WidgetCard>\n  );\n};\n\nexport default PopularPostsCard;\n","import { useMemo } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { popularPostsAtom } from 'atoms/popularPosts';\nimport { Post } from 'models/post';\nimport { useAllPosts } from 'hooks/useAllPosts';\n\nexport const usePopularPosts = () => {\n  const allPosts = useAllPosts();\n  const [popularPostSlugs] = useRecoilState(popularPostsAtom);\n\n  const popularPosts = useMemo(() => {\n    return popularPostSlugs.map(slug => {\n      return allPosts.find(p => p.fields.slug === slug);\n    });\n  }, [allPosts, popularPostSlugs]);\n\n  return popularPosts.filter(v => v != null) as Post[];\n};\n","import React, { useEffect } from 'react';\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport { Typography, Box, makeStyles, Button, Theme } from '@material-ui/core';\nimport PopularPostsCard from 'components/cards/widgets/PopularPosts';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { generateLogger } from 'utils/loggers';\nimport { ImageSharp } from 'models/image';\nimport Emoji from 'src/components/utils/Emoji';\n\nconst logger = generateLogger('error_page');\nconst handlePostClick = (path: string) => {\n  logger.click('click_posting', { path });\n};\nconst handleMainButtonClick = () => {\n  logger.click('click_home_button');\n};\n\nconst useStyles = makeStyles<Theme>(({ spacing, breakpoints }) => ({\n  image: {\n    width: '40%',\n    marginBottom: spacing(3),\n    [breakpoints.up('sm')]: {\n      width: 500,\n    },\n  },\n  textAlignCenter: {\n    textAlign: 'center',\n  },\n  postCardWrapper: {\n    marginTop: spacing(8),\n  },\n  postCard: {\n    maxWidth: '500px',\n    margin: '0 auto',\n  },\n  goBackButtonWrapper: {\n    marginTop: spacing(8),\n  },\n  link: {\n    textDecoration: 'none',\n  },\n}));\n\nconst ErrorPage = () => {\n  const styles = useStyles();\n  const { errorImage } = useStaticQuery<{ errorImage: ImageSharp }>(graphql`\n    query {\n      errorImage: file(absolutePath: { regex: \"/404.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    logger.view();\n  }, []);\n\n  return (\n    <Layout>\n      <SEO title=\"404: Not Found\" />\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        <Image className={styles.image} fluid={errorImage.childImageSharp.fluid} />\n        <Typography className={styles.textAlignCenter} variant=\"h4\" component=\"h2\">\n          길을 잃어버리셨네요...\n          <Emoji emoji=\"😭\" name=\"404\" />\n        </Typography>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" className={styles.postCardWrapper}>\n        <Typography className={styles.textAlignCenter} gutterBottom>\n          혹시 이런 포스팅은 어떠신가요?\n        </Typography>\n        <Box className={styles.postCard}>\n          <PopularPostsCard onClick={handlePostClick} />\n        </Box>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" className={styles.goBackButtonWrapper}>\n        <Link to=\"/\" className={styles.link}>\n          <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleMainButtonClick}>\n            다른 포스팅 보러가기\n          </Button>\n        </Link>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport Page from 'containers/ErrorPage';\nexport default () => <Page />;\n","import React from 'react';\n\ninterface Props {\n  emoji: string;\n  name: string;\n}\nconst Emoji = ({ emoji, name }: Props) => (\n  <span role=\"img\" aria-label={name}>\n    {emoji}\n  </span>\n);\n\nexport default Emoji;\n"],"sourceRoot":""}