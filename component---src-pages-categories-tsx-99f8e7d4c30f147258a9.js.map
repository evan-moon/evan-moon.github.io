{"version":3,"sources":["webpack:///./src/pages/categories.tsx","webpack:///./src/components/Utils/PostCount.tsx","webpack:///./src/components/Utils/CategoryCount.tsx","webpack:///./src/components/Utils/TagCount.tsx","webpack:///./node_modules/react-feather/dist/icons/rss.js","webpack:///./src/components/Cards/BioCard.tsx"],"names":["CategoriesPage","left","right","title","TagCount","count","allMarkdownRemark","totalCount","group","length","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Rss","_ref","ref","_ref$color","color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","propTypes","string","oneOfType","number","displayName","useStyles","makeStyles","theme","contents","textAlign","profileImage","minWidth","marginBottom","spacing","introduce","blogData","palette","grey","fontSize","typography","caption","h5","fontWeight","margin","emailButtonWrapper","emailIcon","marginRight","emailButton","getContrastText","Colors","Grey","backgroundColor","externalLinkbuton","Bio","styles","data","avatar","childImageSharp","fixed","site","siteMetadata","author","social","email","Card","CardContent","className","alt","name","imgStyle","borderRadius","Box","Typography","variant","component","summary","Grid","container","item","xs","PostCount","CategoryCount","Button","href","github","linkedin","rss"],"mappings":"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","file":"component---src-pages-categories-tsx-99f8e7d4c30f147258a9.js","sourcesContent":["import React from 'react';\nimport Layout from 'components/Layout/Base';\nimport SEO from 'components/SEO';\nimport BioCard from 'components/Cards/BioCard';\nimport CategoriesCard from 'components/Cards/CategoriesCard';\nimport RecentPostsCard from 'components/Cards/RecentPostsCard';\n\nconst CategoriesPage = () => {\n  return (\n    <Layout left={<BioCard />} right={<RecentPostsCard />}>\n      <SEO title=\"카테고리\" />\n      <CategoriesCard />\n    </Layout>\n  );\n};\n\nexport default CategoriesPage;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { totalCount: count },\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        totalCount\n      }\n    }\n  `);\n\n  return <>{count}</>;\n};\n\nexport default TagCount;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: frontmatter___categories) {\n          totalCount\n        }\n      }\n    }\n  `);\n  const count = group.length;\n\n  return <>{count}</>;\n};\n\nexport default TagCount;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery(graphql`\n    query TagCountQuery {\n      allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          totalCount\n        }\n      }\n    }\n  `);\n  const count = group.length;\n\n  return <>{count}</>;\n};\n\nexport default TagCount;\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Rss = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 11a9 9 0 0 1 9 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 4a16 16 0 0 1 16 16\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"5\",\n    cy: \"19\",\n    r: \"1\"\n  }));\n});\nRss.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRss.displayName = 'Rss';\nexport default Rss;","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { Card, CardContent, Box, Typography, Grid, Button, makeStyles, Theme } from '@material-ui/core';\nimport PostCount from 'components/Utils/PostCount';\nimport CategoryCount from 'components/Utils/CategoryCount';\nimport TagCount from 'components/Utils/TagCount';\nimport { Colors } from 'utils/colors';\nimport * as Icon from 'react-feather';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  contents: {\n    textAlign: 'center',\n  },\n  profileImage: {\n    minWidth: 50,\n    marginBottom: theme.spacing(2),\n  },\n  introduce: {\n    marginBottom: theme.spacing(2),\n  },\n  blogData: {\n    marginBottom: theme.spacing(2),\n    '& dt': {\n      color: theme.palette.grey['600'],\n      fontSize: theme.typography.caption.fontSize,\n      marginBottom: theme.spacing(0.1),\n    },\n    '& dd': {\n      fontSize: theme.typography.h5.fontSize,\n      fontWeight: 300,\n      margin: 0,\n    },\n  },\n  emailButtonWrapper: {\n    marginBottom: theme.spacing(2),\n  },\n  emailIcon: {\n    width: '1rem',\n    marginRight: theme.spacing(1),\n  },\n  emailButton: {\n    width: '100%',\n    color: theme.palette.getContrastText(Colors.Grey['800']),\n    backgroundColor: Colors.Grey['800'],\n    '&:hover': {\n      backgroundColor: Colors.Grey['900'],\n    },\n  },\n  externalLinkbuton: {\n    width: '100%',\n  },\n}));\n\nconst Bio = () => {\n  const styles = useStyles();\n  const data = useStaticQuery(graphql`\n    query {\n      avatar: file(absolutePath: { regex: \"/me.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 128, height: 128, cropFocus: CENTER) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            email\n          }\n          social {\n            github\n            linkedin\n          }\n        }\n      }\n    }\n  `);\n\n  const {\n    avatar: {\n      childImageSharp: { fixed: avatar },\n    },\n    site: {\n      siteMetadata: { author, social, email },\n    },\n  } = data;\n\n  return (\n    <Card>\n      <CardContent className={styles.contents}>\n        <Image\n          fixed={avatar}\n          alt={author.name}\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n          className={styles.profileImage}\n        />\n        <Box className={styles.introduce}>\n          <Typography variant=\"h6\" component=\"h6\">\n            {author.name}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"subtitle2\">\n            {author.summary}\n          </Typography>\n        </Box>\n        <Grid container>\n          <Grid item xs={4} className={styles.blogData}>\n            <dt>포스트</dt>\n            <dd>\n              <PostCount />\n            </dd>\n          </Grid>\n          <Grid item xs={4} className={styles.blogData}>\n            <dt>카테고리</dt>\n            <dd>\n              <CategoryCount />\n            </dd>\n          </Grid>\n          <Grid item xs={4} className={styles.blogData}>\n            <dt>태그</dt>\n            <dd>\n              <TagCount />\n            </dd>\n          </Grid>\n        </Grid>\n        <Box className={styles.emailButtonWrapper}>\n          <Button variant=\"contained\" href={`mailto:${email}`} className={styles.emailButton}>\n            <Icon.Mail className={styles.emailIcon} />\n            이메일\n          </Button>\n        </Box>\n        <Grid container>\n          <Grid item xs={4}>\n            <Button href={social.github} target=\"_blank\" className={styles.externalLinkbuton}>\n              <Icon.GitHub />\n            </Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Button href={social.linkedin} target=\"_blank\" className={styles.externalLinkbuton}>\n              <Icon.Linkedin />\n            </Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Button href={social.rss} target=\"_blank\" className={styles.externalLinkbuton}>\n              <Icon.Rss />\n            </Button>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}