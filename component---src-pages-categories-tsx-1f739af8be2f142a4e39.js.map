{"version":3,"sources":["webpack:///./src/pages/categories.tsx","webpack:///./src/components/Utils/PostCount.tsx","webpack:///./src/components/Utils/CategoryCount.tsx","webpack:///./src/components/Utils/TagCount.tsx","webpack:///./node_modules/react-feather/dist/icons/rss.js","webpack:///./src/components/Cards/BioCard.tsx"],"names":["CategoriesPage","location","left","right","title","TagCount","count","allMarkdownRemark","totalCount","group","length","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Rss","_ref","ref","_ref$color","color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","propTypes","string","oneOfType","number","displayName","Count","styled","Grid","Colors","Grey","EmailButton","withStyles","theme","root","palette","getContrastText","backgroundColor","Button","ExternalLinkButton","Bio","data","avatar","childImageSharp","fixed","site","siteMetadata","author","social","email","Card","CardContent","css","alt","name","imgStyle","borderRadius","Box","Typography","variant","component","summary","container","item","xs","PostCount","CategoryCount","href","github","linkedin","rss"],"mappings":"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","file":"component---src-pages-categories-tsx-1f739af8be2f142a4e39.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport Layout from 'components/Layout/Base';\nimport SEO from 'components/SEO';\nimport BioCard from 'components/Cards/BioCard';\nimport CategoriesCard from 'components/Cards/CategoriesCard';\nimport RecentPostsCard from 'components/Cards/RecentPostsCard';\n\ninterface Props {\n  location: Location;\n}\nconst CategoriesPage = ({ location }: Props) => {\n  return (\n    <Layout location={location} left={<BioCard />} right={<RecentPostsCard />}>\n      <SEO title=\"카테고리\" />\n      <CategoriesCard />\n    </Layout>\n  );\n};\n\nexport default CategoriesPage;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Fragment } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { totalCount: count },\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        totalCount\n      }\n    }\n  `);\n\n  return <Fragment>{count}</Fragment>;\n};\n\nexport default TagCount;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Fragment } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: frontmatter___categories) {\n          totalCount\n        }\n      }\n    }\n  `);\n  const count = group.length;\n\n  return <Fragment>{count}</Fragment>;\n};\n\nexport default TagCount;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Fragment } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst TagCount = () => {\n  const {\n    allMarkdownRemark: { group },\n  } = useStaticQuery(graphql`\n    query TagCountQuery {\n      allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          totalCount\n        }\n      }\n    }\n  `);\n  const count = group.length;\n\n  return <Fragment>{count}</Fragment>;\n};\n\nexport default TagCount;\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Rss = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 11a9 9 0 0 1 9 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 4a16 16 0 0 1 16 16\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"5\",\n    cy: \"19\",\n    r: \"1\"\n  }));\n});\nRss.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRss.displayName = 'Rss';\nexport default Rss;","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { Card, CardContent, Box, Typography, Grid, Button, withStyles } from '@material-ui/core';\nimport PostCount from 'components/Utils/PostCount';\nimport CategoryCount from 'components/Utils/CategoryCount';\nimport TagCount from 'components/Utils/TagCount';\nimport { Colors } from 'utils/colors';\nimport * as Icon from 'react-feather';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      avatar: file(absolutePath: { regex: \"/me.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 128, height: 128, cropFocus: CENTER) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            email\n          }\n          social {\n            github\n            linkedin\n          }\n        }\n      }\n    }\n  `);\n\n  const {\n    avatar: {\n      childImageSharp: { fixed: avatar },\n    },\n    site: {\n      siteMetadata: { author, social, email },\n    },\n  } = data;\n\n  return (\n    <Card>\n      <CardContent\n        css={css`\n          text-align: center;\n        `}\n      >\n        <Image\n          fixed={avatar}\n          alt={author.name}\n          css={css`\n            min-width: 50px;\n            border-radius: 100%;\n            margin-bottom: 1rem;\n          `}\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n        <Box\n          css={css`\n            margin-bottom: 2rem;\n          `}\n        >\n          <Typography variant=\"h6\" component=\"h6\">\n            {author.name}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"subtitle2\">\n            {author.summary}\n          </Typography>\n        </Box>\n        <Grid container>\n          <Count item xs={4}>\n            <dt>포스트</dt>\n            <dd>\n              <PostCount />\n            </dd>\n          </Count>\n          <Count item xs={4}>\n            <dt>카테고리</dt>\n            <dd>\n              <CategoryCount />\n            </dd>\n          </Count>\n          <Count item xs={4}>\n            <dt>태그</dt>\n            <dd>\n              <TagCount />\n            </dd>\n          </Count>\n        </Grid>\n        <Box\n          css={css`\n            margin-bottom: 1rem;\n          `}\n        >\n          <EmailButton\n            variant=\"contained\"\n            css={css`\n              width: 100%;\n            `}\n            href={`mailto:${email}`}\n          >\n            <Icon.Mail\n              css={css`\n                width: 1rem;\n                margin-right: 0.5rem;\n              `}\n            />\n            이메일\n          </EmailButton>\n        </Box>\n        <Grid container>\n          <Grid item xs={4}>\n            <ExternalLinkButton href={social.github} target=\"_blank\">\n              <Icon.GitHub />\n            </ExternalLinkButton>\n          </Grid>\n          <Grid item xs={4}>\n            <ExternalLinkButton href={social.linkedin} target=\"_blank\">\n              <Icon.Linkedin />\n            </ExternalLinkButton>\n          </Grid>\n          <Grid item xs={4}>\n            <ExternalLinkButton href={social.rss} target=\"_blank\">\n              <Icon.Rss />\n            </ExternalLinkButton>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Count = styled(Grid)`\n  dt {\n    color: ${Colors.Grey['600']};\n    font-size: 0.7rem;\n    margin-bottom: 0.5rem;\n  }\n  dd {\n    font-size: 2rem;\n    font-weight: 300;\n  }\n`;\n\nconst EmailButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(Colors.Grey['800']),\n    backgroundColor: Colors.Grey['800'],\n    '&:hover': {\n      backgroundColor: Colors.Grey['900'],\n    },\n  },\n}))(Button);\n\nconst ExternalLinkButton = styled(Button)`\n  width: 100%;\n`;\n\nexport default Bio;\n"],"sourceRoot":""}