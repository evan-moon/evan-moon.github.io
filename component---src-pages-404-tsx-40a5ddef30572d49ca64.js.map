{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/pages/404.tsx","webpack:///./src/components/Cards/RecentPostsCard.tsx","webpack:///./src/hooks/useLocale.ts","webpack:///./src/components/Items/SimplePostItem.tsx","webpack:///./src/components/Cards/WidgetCard.tsx"],"names":["CardHeader","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","type","variant","display","color","root","content","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","useStyles","makeStyles","spacing","typography","palette","status","textAlign","fontWeight","letterSpacing","h1","centerStatusText","primary","main","textAlignCenter","postCardWrapper","postCard","maxWidth","margin","goBackButtonWrapper","link","textDecoration","NotFoundPage","styles","role","aria-label","justifyContent","flexDirection","gutterBottom","to","size","wrapper","RecentPostsCard","lang","useContext","GlobalContext","edges","allMarkdownRemark","posts","useMemo","map","edge","node","filter","post","fields","splice","handleRecentPostClick","useCallback","url","linkEvent","WidgetCard","index","SimplePostItem","key","path","thumbnail","frontmatter","childImageSharp","fixed","src","date","categories","onClick","shape","item","borderRadius","transition","backgroundColor","grey","width","height","category","join","container","xs","alt","children"],"mappings":"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","file":"component---src-pages-404-tsx-40a5ddef30572d49ca64.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React from 'react';\nimport Layout from 'components/Layout/Base';\nimport SEO from 'components/SEO';\nimport { Typography, Box, makeStyles, Button, Theme } from '@material-ui/core';\nimport RecentPostsCard from 'components/Cards/RecentPostsCard';\nimport { Link } from 'gatsby';\n\nconst useStyles = makeStyles<Theme>(({ spacing, typography, palette }) => ({\n  status: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    letterSpacing: typography.h1.letterSpacing,\n  },\n  centerStatusText: {\n    color: palette.primary.main,\n  },\n  textAlignCenter: {\n    textAlign: 'center',\n  },\n  postCardWrapper: {\n    marginTop: spacing(8),\n  },\n  postCard: {\n    maxWidth: '500px',\n    margin: '0 auto',\n  },\n  goBackButtonWrapper: {\n    marginTop: spacing(8),\n  },\n  link: {\n    textDecoration: 'none',\n  },\n}));\n\nconst NotFoundPage = () => {\n  const styles = useStyles();\n\n  return (\n    <Layout>\n      <SEO title=\"404: Not Found\" />\n      <Box>\n        <Typography className={styles.status} variant=\"h1\">\n          4<span className={styles.centerStatusText}>0</span>4\n        </Typography>\n        <Typography className={styles.textAlignCenter} variant=\"h4\" component=\"h2\">\n          길을 잃어버리셨어요!{' '}\n          <span role=\"img\" aria-label=\"아뿔싸\">\n            🤦‍♂️\n          </span>\n        </Typography>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" className={styles.postCardWrapper}>\n        <Typography className={styles.textAlignCenter} variant=\"subtitle2\" gutterBottom>\n          혹시 이런 포스트를 찾으시나요?\n        </Typography>\n        <Box className={styles.postCard}>\n          <RecentPostsCard />\n        </Box>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" className={styles.goBackButtonWrapper}>\n        <Link to=\"/\" className={styles.link}>\n          <Button size=\"large\" variant=\"contained\" color=\"primary\">\n            메인으로\n          </Button>\n        </Link>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { useCallback, useMemo } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport SimplePostItem from 'components/Items/SimplePostItem';\nimport { Post } from 'models/post';\nimport WidgetCard from 'components/Cards/WidgetCard';\nimport { linkEvent } from 'utils/loggers';\nimport { useLocale } from 'hooks/useLocale';\nimport { makeStyles } from '@material-ui/core';\n\nconst MAX_POST_COUNT = 5;\nconst useStyles = makeStyles({\n  wrapper: {\n    margin: 0,\n    padding: 0,\n  },\n});\n\nconst RecentPostsCard = () => {\n  const styles = useStyles();\n  const lang = useLocale();\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    query RecentPostsQuery {\n      allMarkdownRemark(limit: 20, sort: { order: DESC, fields: frontmatter___date }) {\n        edges {\n          node {\n            ...SimplePostItemQuery\n          }\n        }\n      }\n    }\n  `);\n\n  const posts: Post[] = useMemo(() => {\n    return edges\n      .map((edge: { node: Post }) => edge.node)\n      .filter((post: Post) => post.fields.lang === lang)\n      .splice(0, MAX_POST_COUNT);\n  }, [edges, lang]);\n\n  const handleRecentPostClick = useCallback((url: string) => {\n    linkEvent(url, '최근 글 링크 클릭');\n  }, []);\n\n  return (\n    <WidgetCard title=\"최근 글\">\n      <ul className={styles.wrapper}>\n        {posts.map((post, index) => (\n          <SimplePostItem\n            key={post.fields.path ?? index}\n            thumbnail={post.frontmatter.thumbnail?.childImageSharp?.fixed?.src ?? ''}\n            title={post.frontmatter.title ?? ''}\n            date={post.frontmatter.date}\n            path={post.fields.path ?? '/'}\n            categories={post.frontmatter.categories}\n            onClick={handleRecentPostClick}\n          />\n        ))}\n      </ul>\n    </WidgetCard>\n  );\n};\n\nexport default RecentPostsCard;\n","import { useContext } from 'react';\nimport { GlobalContext } from 'stores';\n\nexport const useLocale = () => {\n  const { lang } = useContext(GlobalContext);\n  return lang;\n};\n","import React, { useMemo } from 'react';\nimport { Grid, Typography, makeStyles, Theme } from '@material-ui/core';\nimport { Link, graphql } from 'gatsby';\n\nconst useStyles = makeStyles<Theme>(({ shape, palette }) => ({\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  item: {\n    borderRadius: shape.borderRadius,\n    transition: 'background-color 0.3s ease-in-out',\n    ['&:hover']: {\n      backgroundColor: palette.grey['100'],\n    },\n  },\n  thumbnail: {\n    width: 64,\n    height: 64,\n    margin: 0,\n    borderRadius: shape.borderRadius,\n  },\n}));\n\ninterface Props {\n  thumbnail: string;\n  title: string;\n  path: string;\n  date?: string;\n  categories?: string[];\n  onClick?: (path: string) => void;\n}\nconst SimplePostItem = ({ thumbnail, title, path, date = '', categories = [], onClick }: Props) => {\n  const styles = useStyles();\n  const category = useMemo(() => {\n    if (categories != null) {\n      return categories.join('/');\n    } else {\n      return '';\n    }\n  }, [categories]);\n  return (\n    <Link to={path} className={styles.link}>\n      <Grid container spacing={2} onClick={() => onClick?.(path)} className={styles.item}>\n        <Grid item xs=\"auto\">\n          <img src={thumbnail} alt={title} title={title} className={styles.thumbnail} />\n        </Grid>\n        <Grid item xs={true}>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"caption\">\n            {date}\n          </Typography>\n          <Typography variant=\"body2\">{title}</Typography>\n          <Typography color=\"textSecondary\" variant=\"caption\">\n            {category}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Link>\n  );\n};\n\nexport default SimplePostItem;\n\nexport const query = graphql`\n  fragment SimplePostItemQuery on MarkdownRemark {\n    fields {\n      path\n      lang\n    }\n    frontmatter {\n      title\n      categories\n      date(formatString: \"YYYY-MM-DD\")\n      thumbnail {\n        childImageSharp {\n          fixed(width: 320, height: 320, quality: 100, cropFocus: CENTER) {\n            src\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { ReactNode } from 'react';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\ninterface Props {\n  title?: string;\n  children: ReactNode;\n}\nconst WidgetCard = ({ title = '', children }: Props) => {\n  return (\n    <Card>\n      <CardHeader\n        title={\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport default WidgetCard;\n"],"sourceRoot":""}