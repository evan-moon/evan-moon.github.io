{"componentChunkName":"component---src-templates-lecture-page-template-tsx","path":"/lectures/regex-tutorial/section2/5/","result":{"data":{"markdownRemark":{"id":"87140141-f114-5721-8a5b-28327c5e0484","excerpt":"이번 강의에서는 정규식의 캐릭터 클래스 중 워드 그룹을 의미하는  캐릭터 클래스에 대해서 알아볼건데요. 워드 그룹은 영어, 숫자, 그리고 언더바로 이루어진 문자들의 집합입니다. 워드라는 이름만 보면 왠지 사람이 말하는 언어에 사용하는 문자들은 전부 …","html":"<p>이번 강의에서는 정규식의 캐릭터 클래스 중 워드 그룹을 의미하는 <code class=\"language-text\">\\w</code> 캐릭터 클래스에 대해서 알아볼건데요.</p>\n<p>워드 그룹은 영어, 숫자, 그리고 언더바로 이루어진 문자들의 집합입니다. 워드라는 이름만 보면 왠지 사람이 말하는 언어에 사용하는 문자들은 전부 들어있을 것 같지만, 이 워드라는 개념에는 영어만 해당돼요.</p>\n<p>따라서 한글이나 중국어, 일본어, 키릴 문자 같은 애들은 이 <code class=\"language-text\">\\w</code> 캐릭터 클래스로는 찾아낼 수가 없습니다.</p>\n<p>한번 예시를 볼까요? 이 문장에는 한글과 대시, 그리고 숫자가 섞여있습니다. 이 문자열에 제가 <code class=\"language-text\">\\w</code> 그룹을 적용하면</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token string\">'제 핸드폰번호는 010-0000-1111입니다'</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\w/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>이렇게 한글과 대시를 제외한 숫자만 매칭되서 결과로 나오게 됩니다. 그럼 만약 이 문장이 영어로 되어있다면 어떻게 될까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token string\">'My number is 010-0000-1111'</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\w/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">\"M\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"m\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"i\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>이번에는 아까와 다르게 영어와 숫자가 모두 매칭되었죠? 이번에도 마찬가지로 대시는 워드 그룹에 들어가지 않기 때문에 매칭되지 않았습니다.</p>\n<p>그럼 반대로는 어떨까요? 워드 그룹이 아닌 녀석들, 즉, 영어와 숫자와 언더바가 아닌 녀석들을 매칭하려면 어떻게 하면 될까요?</p>\n<p>이전 강의에서 숫자를 의미하는 \\d 캐릭터 클래스를 설명하면서 숫자가 아닌 것을 표현하려면 소문자가 아닌, 대문자로 표현하면 된다고 했었죠? \\w 캐릭터 클래스도 마찬가지입니다. 이 규칙은 모든 캐릭터 클래스에 통용된다고 생각해도 돼요</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token string\">'제 핸드폰번호는 010-0000-1111입니다'</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\W/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">\"제\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"핸\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"드\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"폰\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"번\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"호\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"는\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"입\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"니\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"다\"</span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>","tableOfContents":"","fields":{"slug":"lecture.regex-tutorial.section2.5","lecture":"regex-tutorial","category":"content"},"frontmatter":{"title":"문자를 찾아내는 \\w 캐릭터 클래스"}}},"pageContext":{"slug":"lecture.regex-tutorial.section2.5","previous":{"fields":{"slug":"lecture.regex-tutorial.section2.6","path":"/lectures/regex-tutorial/section2/6/"}},"next":{"fields":{"slug":"lecture.regex-tutorial.section2.4","path":"/lectures/regex-tutorial/section2/4/"}}}}}